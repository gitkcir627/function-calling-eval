{"question": "What is the name of the student in the 'students' table with the ID 1234, if we consider the columns 'id' and 'name' and the condition 'id = 1234'?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"students\", columns=[\"name\"], conditions=[\"id = 1234\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What is the value of the 'result' column in the 'calculations' table for the calculation with the ID 5678, if we consider the columns 'id' and 'result' and the condition 'id = 5678'?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"calculations\", columns=[\"result\"], conditions=[\"id = 5678\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table in the database named 'Students' with the columns 'StudentID', 'FirstName', 'LastName', 'Age', and 'Grade'?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Students\", columns=[\"StudentID\", \"FirstName\", \"LastName\", \"Age\", \"Grade\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you generate a new table in the database named 'MathScores' with the columns 'StudentID', 'AlgebraScore', 'GeometryScore', 'CalculusScore', and 'StatisticsScore'?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"MathScores\", columns=[\"StudentID\", \"AlgebraScore\", \"GeometryScore\", \"CalculusScore\", \"StatisticsScore\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database table named \"StudentGrades\", there are columns named \"StudentID\", \"MathGrade\", \"EnglishGrade\", and \"ScienceGrade\". You want to change the \"MathGrade\" of the student with \"StudentID\" 12345 to 95. What operation would you perform to accomplish this, and what would be the new values corresponding to the columns to set and the conditions for this operation?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"StudentGrades\", columns=[\"MathGrade\"], update_values=[\"95\"], conditions=[\"StudentID = 12345\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database table called \"ExamScores\", there are columns named \"ExamID\", \"AlgebraScore\", \"GeometryScore\", and \"CalculusScore\". If you need to modify the \"GeometryScore\" of the exam with \"ExamID\" 67890 to 85, what operation would you carry out and what would be the new values associated with the columns to set and the conditions for this operation?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"ExamScores\", columns=[\"GeometryScore\"], update_values=[\"85\"], conditions=[\"ExamID = 67890\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database table named \"Students\", can you remove the records of students who have a GPA less than 2.0? The columns involved in this operation are \"StudentID\", \"Name\", and \"GPA\". The condition for this operation is \"GPA < 2.0\".", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"Students\", columns=[\"StudentID\", \"Name\", \"GPA\"], conditions=[\"GPA < 2.0\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database table named \"MathScores\", can you erase the records of students who scored less than 50 in their final exam? The columns involved in this operation are \"StudentID\", \"StudentName\", and \"FinalScore\". The condition for this operation is \"FinalScore < 50\".", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"MathScores\", columns=[\"StudentID\", \"StudentName\", \"FinalScore\"], conditions=[\"FinalScore < 50\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database, there is a table named 'Students' with columns 'ID', 'Name', 'Age', 'Grade'. You are required to add a new student's information into the table. The student's ID is 'S101', Name is 'John Doe', Age is '15', and Grade is '10'. How would you add this information into the table?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"Students\", columns=[\"ID\", \"Name\", \"Age\", \"Grade\"], insert_values=[[\"S101\", \"John Doe\", \"15\", \"10\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a school database, there is a table named 'MathScores' with columns 'StudentID', 'Name', 'TestScore', 'TestDate'. You have just graded a math test for a student named 'Emily Watson' with ID 'EW123'. Emily scored '95' on the test which was conducted on '2022-03-01'. How would you record Emily's test score into the database?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"MathScores\", columns=[\"StudentID\", \"Name\", \"TestScore\", \"TestDate\"], insert_values=[[\"EW123\", \"Emily Watson\", \"95\", \"2022-03-01\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide the names of the students from the \"Physics_Class\" table who scored above 90 in the final exam? The column names involved in this operation are \"student_name\" and \"final_score\", with the condition being \"final_score > 90\".", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"Physics_Class\", columns=[\"student_name\"], conditions=[\"final_score > 90\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you retrieve the names and research topics of the physicists from the \"Physicists\" table who are working on Quantum Mechanics? The table to operate on is \"Physicists\", the column names involved in this operation are \"name\" and \"research_topic\", with the condition being \"research_topic = 'Quantum Mechanics'\".", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"Physicists\", columns=[\"name\", \"research_topic\"], conditions=[\"research_topic = 'Quantum Mechanics'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a database table named \"PhysicsExperiments\" with columns \"ExperimentID\", \"ExperimentName\", \"Researcher\", \"DateConducted\", \"Result\" to store the details of physics experiments conducted in our lab?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"PhysicsExperiments\", columns=[\"ExperimentID\", \"ExperimentName\", \"Researcher\", \"DateConducted\", \"Result\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you establish a new database table called \"ParticleData\" with the columns \"ParticleID\", \"ParticleName\", \"DiscoveredBy\", \"YearDiscovered\", \"Charge\", \"Spin\", \"Mass\" to record the properties of elementary particles discovered in particle physics?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"ParticleData\", columns=[\"ParticleID\", \"ParticleName\", \"DiscoveredBy\", \"YearDiscovered\", \"Charge\", \"Spin\", \"Mass\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a physics experiment, the data is stored in a database table named 'ExperimentData'. The table has columns 'ExperimentID', 'ExperimentName', 'DataValue', 'Unit', and 'DataTime'. The experiment with ID 'EX123' has a data value of '9.8' with unit 'm/s^2' recorded at '2022-01-01 10:00:00'. However, the data value was recorded incorrectly and should be '10.0'. Can you correct this value in the database?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"ExperimentData\", columns=[\"DataValue\"], update_values=[\"10.0\"], conditions=[\"ExperimentID = 'EX123'\", \"DataTime = '2022-01-01 10:00:00'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a physics lab, the results of an experiment are stored in a database table named 'PhysicsResults'. The table has columns 'ExperimentID', 'ExperimentName', 'Result', 'MeasurementUnit', and 'ExperimentDate'. The experiment with ID 'PHY789' has a result of '5.6' with measurement unit 'Joules' recorded on '2022-02-02 14:00:00'. However, upon reevaluation, it was found that the actual result should be '6.0' Joules. Could you please make this correction in the database?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"PhysicsResults\", columns=[\"Result\"], update_values=[\"6.0\"], conditions=[\"ExperimentID = 'PHY789'\"])", "sql.execute(sql_keyword=\"SELECT\", table_name=\"PhysicsResults\", columns=[\"ExperimentID\", \"ExperimentName\", \"Result\", \"MeasurementUnit\", \"ExperimentDate\"], conditions=[\"ExperimentID = 'PHY789'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a physics experiment, a database table named \"ExperimentData\" is used to store the measurements. Each row in the table represents a single measurement and contains columns for 'ExperimentID', 'MeasurementID', 'Value', 'Unit', and 'Timestamp'. If a measurement with 'MeasurementID' of 'M123' and 'ExperimentID' of 'E456' was found to be incorrect, could you remove this specific measurement from the \"ExperimentData\" table? The condition for this operation would be where 'MeasurementID' equals 'M123' and 'ExperimentID' equals 'E456'.", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"ExperimentData\", conditions=[\"MeasurementID = 'M123'\", \"ExperimentID = 'E456'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In the field of astrophysics, a database table named \"StarObservations\" is used to record the observations of various celestial bodies. The table includes columns for 'ObservationID', 'StarName', 'Magnitude', 'Coordinates', and 'ObservationTime'. If an observation with 'ObservationID' of 'O789' and 'StarName' of 'Betelgeuse' was identified as erroneous due to a faulty telescope, could you eliminate this particular observation from the \"StarObservations\" table? The criteria for this operation would be where 'ObservationID' equals 'O789' and 'StarName' equals 'Betelgeuse'.", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"StarObservations\", conditions=[\"ObservationID = 'O789'\", \"StarName = 'Betelgeuse'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a physics experiment, we have collected data for the time taken by a ball to fall from different heights. The data is to be stored in a database table named 'FreeFallExperiment'. The columns in the table are 'Height', 'Time' and 'TrialNumber'. For the first trial, the ball was dropped from a height of 10m and it took 1.43 seconds to hit the ground. For the second trial, the ball was dropped from a height of 20m and it took 2.01 seconds to hit the ground. Can you store this data in the database?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"FreeFallExperiment\", insert_values=[[\"10\", \"1.43\", \"1\"],[\"20\", \"2.01\", \"2\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a physics lab, we are conducting an experiment to measure the speed of sound in different mediums. We have a database table named 'SoundSpeedExperiment' where we store our results. The columns in the table are 'Medium', 'Speed', 'Temperature' and 'ExperimentNumber'. In the first experiment, the speed of sound in air at 20 degrees Celsius was measured to be 343 m/s. In the second experiment, the speed of sound in water at the same temperature was found to be 1482 m/s. Can you help us record this data in our database?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"SoundSpeedExperiment\", insert_values=[[\"Air\", \"343\", \"20\", \"1\"],[\"Water\", \"1482\", \"20\", \"2\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide the names and atomic numbers of all elements in the 'PeriodicTable' database where the atomic weight is less than 20?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"PeriodicTable\", columns=[\"name\", \"atomic_numbers\"], conditions=[\"atomic_weight < 20\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide the names and atomic masses of all elements in the 'ChemicalElements' database where the number of protons is greater than 50?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"ChemicalElements\", columns=[\"name\", \"atomic_masses\"], conditions=[\"number_of_protons > 50\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table in the database named \"ChemicalElements\" with the columns \"ElementName\", \"AtomicNumber\", \"Symbol\", and \"AtomicWeight\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"ChemicalElements\", columns=[\"ElementName\", \"AtomicNumber\", \"Symbol\", \"AtomicWeight\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you form a new table in the database called \"MolecularStructures\" with the columns \"MoleculeName\", \"MolecularFormula\", \"MolecularWeight\", and \"StructureDiagram\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"MolecularStructures\", columns=[\"MoleculeName\", \"MolecularFormula\", \"MolecularWeight\", \"StructureDiagram\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In our chemistry database, we have a table named \"Elements\" which contains information about all the known chemical elements. The columns in this table are 'ElementName', 'AtomicNumber', 'Symbol', 'AtomicWeight', and 'Period'. Recently, there has been a revision in the atomic weight of the element \"Hydrogen\". The new atomic weight is 1.008. Can you please update this information in our database? Use the condition where 'ElementName' is \"Hydrogen\".", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"Elements\", columns=[\"AtomicWeight\"], update_values=[\"1.008\"], conditions=[\"ElementName = Hydrogen\"]"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In our chemistry database, there's a table called \"Compounds\" that stores data about various chemical compounds. The columns of this table are 'CompoundName', 'Formula', 'MolarMass', 'Density', and 'MeltingPoint'. We've recently discovered that the molar mass of the compound \"Water\" has been inaccurately recorded as 18.01 g/mol. The correct molar mass should be 18.01528 g/mol. Could you please correct this error in our database? Make sure to apply this change only to the record where 'CompoundName' is \"Water\".", "human_eval_answer": [{"sql.execute": {"sql_keyword": "UPDATE", "table_name": "Compounds", "columns": ["MolarMass"], "update_values": ["18.01528"], "conditions": ["CompoundName = Water"]}}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a chemistry database, there is a table named 'Elements' that contains information about all known chemical elements. The columns in this table are 'ElementName', 'AtomicNumber', 'Symbol', 'AtomicWeight', and 'Period'. If a new discovery proves that the element with the atomic number 118, currently known as 'Oganesson' with the symbol 'Og', does not exist, how would you remove this information from the database?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"Elements\", conditions=[\"AtomicNumber = 118\"])", "sql.execute(sql_keyword=\"DELETE\", table_name=\"Elements\", conditions=[\"ElementName = 'Oganesson'\"])", "sql.execute(sql_keyword=\"DELETE\", table_name=\"Elements\", conditions=[\"Symbol = 'Og'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database of chemical compounds, there is a table named 'Compounds' that includes details about various chemical compounds. The columns in this table are 'CompoundName', 'MolecularFormula', 'MolecularWeight', 'Density', and 'MeltingPoint'. If a recent scientific study disproves the existence of a compound previously believed to be real, specifically the compound with the name 'Dihydrogen Monoxide' and the molecular formula 'H2O', how would you eliminate this data from the database?", "human_eval_answer": ["sql.execute(sql_keyword='DELETE', table_name='Compounds', conditions=['CompoundName = Dihydrogen Monoxide', 'MolecularFormula = H2O'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new record to the 'ChemicalElements' table in the database, where the columns are 'ElementName', 'AtomicNumber', 'Symbol', and 'AtomicWeight', and the values to be inserted are 'Helium', '2', 'He', and '4.002602'?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"ChemicalElements\", columns=[\"ElementName\", \"AtomicNumber\", \"Symbol\", \"AtomicWeight\"], insert_values=[[\"Helium\", \"2\", \"He\", \"4.002602\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new entry to the 'PeriodicTable' database table, where the columns are 'Element', 'AtomicNumber', 'Symbol', and 'AtomicMass', and the values to be inserted correspond to the element 'Neon', with atomic number '10', symbol 'Ne', and atomic mass '20.1797'?", "human_eval_answer": [{"sql.execute": {"sql_keyword": "INSERT INTO", "table_name": "PeriodicTable", "columns": ["Element", "AtomicNumber", "Symbol", "AtomicMass"], "insert_values": [["Neon", "10", "Ne", "20.1797"]]}}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What are the names of the species in the \"species\" table in the database that have a lifespan greater than 50 years? Please include only those species whose names are listed in the columns \"species_name\", \"lifespan\" and satisfy the condition where lifespan is greater than 50 years.", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"species\", columns=[\"species_name\"], conditions=[\"lifespan > 50\"]"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide the list of genes from the \"gene\" table that are associated with the disease \"Cancer\"? Please include only those genes whose names are listed in the columns \"gene_name\", \"disease\" and satisfy the condition where disease is \"Cancer\".", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"gene\", columns=[\"gene_name\"], conditions=[\"disease = Cancer\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table called \"CellTypes\" in the database, with columns named \"CellID\", \"CellName\", \"Organ\", and \"Function\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"CellTypes\", columns=[\"CellID\", \"CellName\", \"Organ\", \"Function\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you generate a new table named \"Genes\" in the database, with the column names being \"GeneID\", \"GeneName\", \"Chromosome\", \"StartLocation\", and \"EndLocation\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Genes\", columns=[\"GeneID\", \"GeneName\", \"Chromosome\", \"StartLocation\", \"EndLocation\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What changes should be made to the \"AnimalClassification\" table in the database to update the \"Lifespan\" column for the animal \"Elephant\" to 70 years, based on the condition that the current lifespan is less than 70 years?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"AnimalClassification\", columns=[\"Lifespan\"], update_values=[\"70\"], conditions=[\"animal = Elephant\", \"Lifespan < 70\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In the \"PlantSpecies\" database table, how can we modify the \"AverageHeight\" column to reflect a new average height of 150 cm for the plant species \"Sunflower\", given that the current average height recorded is less than 150 cm?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"PlantSpecies\", columns=[\"AverageHeight\"], update_values=[\"150\"], conditions=[\"SpeciesName = 'Sunflower'\", \"AverageHeight < 150\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you remove the record from the \"Genes\" table where the \"GeneID\" is \"BRCA1\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"Genes\", conditions=[\"GeneID = 'BRCA1'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you eliminate the data from the \"Proteins\" table where the \"ProteinName\" is \"Hemoglobin\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"Proteins\", conditions=[\"ProteinName = Hemoglobin\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add the new species of frog discovered in the Amazon rainforest, named \"Leptodactylus pentadactylus\", with a lifespan of 10 years, a size of 7.5 cm, and a weight of 80 grams, to the \"Species\" table in the database? The columns in the table are \"Species_Name\", \"Lifespan\", \"Size\", and \"Weight\".", "human_eval_answer": [{"sql.execute": {"sql_keyword": "INSERT INTO", "table_name": "Species", "columns": ["Species_Name", "Lifespan", "Size", "Weight"], "insert_values": [["Leptodactylus pentadactylus", "10", "7.5", "80"]]}}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you record the discovery of a new plant species in the Sahara desert, named \"Cactaceae saharae\", with a height of 15 cm, a lifespan of 20 years, and a seed weight of 0.5 grams, in the \"Plant_Species\" table in the database? The columns in the table are \"Species_Name\", \"Height\", \"Lifespan\", and \"Seed_Weight\".", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"Plant_Species\", columns=[\"Species_Name\", \"Height\", \"Lifespan\", \"Seed_Weight\"], insert_values=[[\"Cactaceae saharae\", \"15\", \"20\", \"0.5\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you retrieve the data from the 'employees' table where the 'age' column is greater than 30 and the 'department' column is 'Sales'?", "human_eval_answer": ["sql.execute(sql_keyword='SELECT', table_name='employees', columns=['*'], conditions=['age > 30', 'department = Sales'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you fetch the records from the 'students' table where the 'grade' column is less than 60 and the 'course' column is 'Computer Science'?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"students\", columns=[\"*\"], conditions=[\"grade < 60\", \"course = 'Computer Science'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table named 'Students' in the database with columns 'ID', 'Name', 'Age', and 'Grade'?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Students\", columns=[\"ID\", \"Name\", \"Age\", \"Grade\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you generate a new table in the database called 'Employees' with the fields 'EmployeeID', 'FirstName', 'LastName', 'Position', and 'Salary'?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Employees\", columns=[\"EmployeeID\", \"FirstName\", \"LastName\", \"Position\", \"Salary\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database, you have a table named 'Students' with columns 'Name', 'Age', 'Grade'. You want to change the 'Grade' of a student named 'John' to 'A'. How would you perform this operation?", "human_eval_answer": ["sql.execute(sql_keyword='UPDATE', table_name='Students', columns=['Grade'], update_values=['A'], conditions=['Name = John'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database, there is a table called 'Employees' with columns 'EmployeeID', 'Name', 'Position', 'Salary'. You need to modify the 'Salary' of an employee with 'EmployeeID' 'E123' to '80000'. How can you accomplish this task?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"Employees\", columns=[\"Salary\"], update_values=[\"80000\"], conditions=[\"EmployeeID = 'E123'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database, there is a table named \"Employees\" which contains information about all the employees in a company. The company has recently fired an employee named \"John Doe\". Can you remove all the records from the \"Employees\" table where the employee's name is \"John Doe\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"Employees\", conditions=[\"name='John Doe'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a university database, there is a table named \"Students\" that stores all the information about the students. A student named \"Jane Smith\" has recently withdrawn from the university. Can you eliminate all the records from the \"Students\" table where the student's name is \"Jane Smith\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"Students\", conditions=[\"name='Jane Smith'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database, there is a table named \"Students\" with columns \"ID\", \"Name\", \"Age\", and \"Grade\". You need to add a new student's information into this table. The student's ID is \"S101\", name is \"John Doe\", age is \"16\", and grade is \"10\". How would you add this information into the \"Students\" table?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"Students\", columns=[\"ID\", \"Name\", \"Age\", \"Grade\"], insert_values=[[\"S101\", \"John Doe\", \"16\", \"10\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database, there is a table named \"Employees\" with columns \"EmployeeID\", \"FirstName\", \"LastName\", \"Position\", and \"Salary\". You have a new employee's details to be added to this table. The details are as follows: EmployeeID is \"E123\", FirstName is \"Jane\", LastName is \"Doe\", Position is \"Manager\", and Salary is \"80000\". How would you incorporate this data into the \"Employees\" table?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"Employees\", columns=[\"EmployeeID\", \"FirstName\", \"LastName\", \"Position\", \"Salary\"], insert_values=[[\"E123\", \"Jane\", \"Doe\", \"Manager\", \"80000\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What are the names of the employees from the 'employees' table who have a salary greater than 50000?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"employees\", columns=[\"name\"], conditions=[\"salary > 50000\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide the names and ages of the customers from the 'customers' table who have made purchases exceeding $1000?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"customers\", columns=[\"name\", \"age\"], conditions=[\"purchases > 1000\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table named 'Employee' in the database with columns 'ID', 'Name', 'Position', 'Salary' and 'Department'?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Employee\", columns=[\"ID\", \"Name\", \"Position\", \"Salary\", \"Department\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you establish a new database table called 'Customer' with the fields 'CustomerID', 'FirstName', 'LastName', 'Email', 'Phone', and 'Address'?", "human_eval_answer": ["sql.execute(sql_keyword='CREATE', table_name='Customer', columns=['CustomerID', 'FirstName', 'LastName', 'Email', 'Phone', 'Address'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you modify the \"employees\" table by setting the \"salary\" column to \"5000\" for all employees whose \"job_title\" is \"Manager\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"employees\", columns=[\"salary\"], update_values=[\"5000\"], conditions=[\"job_title = 'Manager'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you change the \"products\" table by adjusting the \"price\" column to \"20\" for all items whose \"category\" is \"Electronics\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"products\", columns=[\"price\"], update_values=[\"20\"], conditions=[\"category = Electronics\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you remove all records from the 'orders' table where the 'order_status' is 'cancelled'?", "human_eval_answer": ["sql.execute(sql_keyword='DELETE', table_name='orders', conditions=['order_status = cancelled'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you eliminate all entries from the 'customer_data' table where the 'customer_age' is less than '18'?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"customer_data\", conditions=[\"customer_age < 18\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new record into the 'employees' table, where the columns are 'employee_id', 'first_name', 'last_name', 'email', and 'phone_number', and the corresponding values to be inserted are 'E1001', 'John', 'Doe', 'johndoe@example.com', and '123-456-7890'?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"employees\", columns=[\"employee_id\", \"first_name\", \"last_name\", \"email\", \"phone_number\"], insert_values=[[\"E1001\", \"John\", \"Doe\", \"johndoe@example.com\", \"123-456-7890\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you populate the 'customer' table with a new entry where the columns are 'customer_id', 'customer_name', 'customer_email', 'customer_address', and 'customer_phone', and the corresponding values to be added are 'C1023', 'Jane Smith', 'janesmith@example.com', '123 Main St, Anytown', and '987-654-3210'?", "human_eval_answer": ["sql.execute(sql_keyword='INSERT INTO', table_name='customer', columns=['customer_id', 'customer_name', 'customer_email', 'customer_address', 'customer_phone'], insert_values=[['C1023', 'Jane Smith', 'janesmith@example.com', '123 Main St, Anytown', '987-654-3210']])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What are the names of the employees from the 'employees' table who have a salary greater than $5000?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"employees\", columns=[\"name\"], conditions=[\"salary > 5000\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What is the average age of the customers from the 'customers' table who have made purchases above $1000?", "human_eval_answer": ["sql.execute(sql_keyword='SELECT', table_name='customers', columns=['AVG(age)'], conditions=['purchase > 1000'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table named \"StudentScores\" in the database, with columns \"StudentID\", \"MathScore\", \"EnglishScore\", and \"ScienceScore\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"StudentScores\", columns=[\"StudentID\", \"MathScore\", \"EnglishScore\", \"ScienceScore\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you generate a new database table named \"SurveyResults\" that includes the columns \"RespondentID\", \"Age\", \"Gender\", \"Income\", and \"SatisfactionScore\" to store the data collected from a customer satisfaction survey?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"SurveyResults\", columns=[\"RespondentID\", \"Age\", \"Gender\", \"Income\", \"SatisfactionScore\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database table named \"Students\", can you change the \"Grade\" column to 'A' for all students whose \"Age\" is greater than 18?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"Students\", columns=[\"Grade\"], update_values=[\"A\"], conditions=[\"Age > 18\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database table called \"Survey_Responses\", can you modify the \"Response\" column to 'Yes' for all participants whose \"Age\" is above 50 and \"Gender\" is 'Male'?", "human_eval_answer": [{"func_name1": "sql.execute", "param1": "sql_keyword", "param_val1": "UPDATE", "param2": "table_name", "param_val2": "Survey_Responses", "param3": "columns", "param_val3": ["Response"], "param4": "update_values", "param_val4": ["Yes"], "param5": "conditions", "param_val5": ["Age > 50", "Gender = 'Male'"]}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you remove all records from the 'employees' table where the 'job_title' is 'Data Analyst'?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"employees\", conditions=[\"job_title='Data Analyst'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you eliminate all entries from the 'student_scores' table where the 'score' is less than 50?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"student_scores\", conditions=[\"score < 50\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new record to the database table named 'Students' with the columns 'StudentID', 'FirstName', 'LastName', 'Age', and 'Grade' where the values to be inserted are 'S101', 'John', 'Doe', '15', and '10'?", "human_eval_answer": ["sql.execute(sql_keyword='INSERT INTO', table_name='Students', columns=['StudentID', 'FirstName', 'LastName', 'Age', 'Grade'], insert_values=[['S101', 'John', 'Doe', '15', '10']])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new data entry to the 'Census' database table with the columns 'Year', 'Population', 'BirthRate', 'DeathRate', and 'NetMigrationRate' where the values to be inserted are '2022', '331002651', '12.4', '8.9', and '2.5'? This will help us update our statistical data on the United States demographics.", "human_eval_answer": [{"sql.execute": {"sql_keyword": "INSERT INTO", "table_name": "Census", "columns": ["Year", "Population", "BirthRate", "DeathRate", "NetMigrationRate"], "insert_values": [["2022", "331002651", "12.4", "8.9", "2.5"]]}}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What is the total quantity of product X sold in the last quarter from the 'sales' table, considering only the columns 'product_name' and 'quantity_sold', where the product name is 'Product X' and the sale date is between '2022-01-01' and '2022-03-31'?", "human_eval_answer": ["sql.execute(sql_keyword='SELECT', table_name='sales', columns=['product_name', 'quantity_sold'], conditions=['product_name = Product X', 'sale_date >= 2022-01-01', 'sale_date <= 2022-03-31'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What is the average income of individuals in the city of New York from the 'income_data' table, considering only the columns 'city' and 'income', where the city is 'New York'?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"income_data\", columns=[\"income\"], conditions=[\"city = 'New York'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table in the database named 'EconomicData' with columns 'Year', 'GDP', 'InflationRate', 'UnemploymentRate', and 'InterestRate'?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"EconomicData\", columns=[\"Year\", \"GDP\", \"InflationRate\", \"UnemploymentRate\", \"InterestRate\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you establish a new database table called 'FiscalPolicy' with the fields 'Year', 'GovernmentSpending', 'TaxRevenue', 'BudgetDeficit', and 'PublicDebt'?", "human_eval_answer": ["sql.execute(sql_keyword='CREATE', table_name='FiscalPolicy', columns=['Year', 'GovernmentSpending', 'TaxRevenue', 'BudgetDeficit', 'PublicDebt'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In the context of a database containing information about various countries' GDP, can you modify the GDP value of the United States in the table named 'country_gdp' under the column 'gdp'? Please set the new GDP value to '21.44 trillion USD' and ensure this operation only affects the row where the 'country_name' is 'United States'.", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"country_gdp\", columns=[\"gdp\"], update_values=[\"21.44 trillion USD\"], conditions=[\"country_name = 'United States'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "In a database that stores information about the inflation rates of different countries, could you change the inflation rate of Japan in the 'country_inflation' table under the 'inflation_rate' column? Please change the inflation rate to '1.2%' and make sure this operation only applies to the row where the 'country_name' is 'Japan'.", "human_eval_answer": ["sql.execute(sql_keyword='UPDATE', table_name='country_inflation', columns=['inflation_rate'], update_values=['1.2%'], conditions=['country_name = Japan'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you remove all records from the 'EconomicData' table in the database that have 'GDP' in the 'Indicator' column and '2010' in the 'Year' column?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"EconomicData\", conditions=[\"Indicator = GDP\", \"Year = 2010\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you eliminate all entries from the 'FinancialStats' table where the 'EconomicIndicator' column is 'Unemployment Rate' and the 'Year' column is '2005'?", "human_eval_answer": ["sql.execute(sql_keyword='DELETE', table_name='FinancialStats', conditions=['EconomicIndicator = Unemployment Rate', 'Year = 2005'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new record to the 'EconomicData' table in the database, where the columns are 'Country', 'GDP', 'Unemployment_Rate', and 'Inflation_Rate', and the corresponding values to be inserted are 'USA', '21.43 trillion', '3.5%', and '1.8%' respectively?", "human_eval_answer": [{"sql.execute": {"sql_keyword": "INSERT INTO", "table_name": "EconomicData", "columns": ["Country", "GDP", "Unemployment_Rate", "Inflation_Rate"], "insert_values": [["USA", "21.43 trillion", "3.5%", "1.8%"]]}}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new entry to the 'GlobalEconomy' table, where the columns are 'Region', 'Trade_Deficit', 'Interest_Rate', and 'Population', with the respective values being 'Europe', '2.1 trillion', '0.5%', and '741.4 million'?", "human_eval_answer": ["sql.execute(sql_keyword='INSERT INTO', table_name='GlobalEconomy', columns=['Region', 'Trade_Deficit', 'Interest_Rate', 'Population'], insert_values=[['Europe', '2.1 trillion', '0.5%', '741.4 million']])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What are the names and salaries of employees in the \"Employees\" table who have a salary greater than $5000?", "human_eval_answer": ["sql.execute(sql_keyword='SELECT', table_name='Employees', columns=['name', 'salaries'], conditions=['salaries > 5000'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide the names and account balances of customers from the \"Customers\" table who have an account balance greater than $10,000?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"Customers\", columns=[\"name\", \"account_balances\"], conditions=[\"account_balances > 10000\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table named 'Investments' in the database, with the columns 'InvestorName', 'InvestmentType', 'InvestmentAmount', and 'InvestmentDate'?", "human_eval_answer": ["sql.execute(sql_keyword='CREATE', table_name='Investments', columns=['InvestorName', 'InvestmentType', 'InvestmentAmount', 'InvestmentDate'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you establish a new database table called 'FinancialTransactions', with the fields 'TransactionID', 'TransactionType', 'TransactionAmount', and 'TransactionDate'?", "human_eval_answer": ["sql.execute(sql_keyword='CREATE', table_name='FinancialTransactions', columns=['TransactionID', 'TransactionType', 'TransactionAmount', 'TransactionDate'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "What is the new balance of the customer named \"John Doe\" in the \"customers\" table after we add $500 to his current balance of $1000 in the \"balance\" column, given that the operation is successful?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"customers\", columns=[\"balance\"], update_values=[\"1500\"], conditions=[\"name = 'John Doe'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you tell me the updated price of the stock named \"Apple Inc.\" in the \"stocks\" table after we decrease its current price of $150 by $10 in the \"price\" column, assuming the operation is successful?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"stocks\", columns=[\"price\"], update_values=[\"140\"], conditions=[\"name = 'Apple Inc.'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you remove all records from the 'transactions' table in the database where the 'account_type' is 'savings' and the 'amount' is greater than 5000?", "human_eval_answer": [{"sql.execute": {"sql_keyword": "DELETE", "table_name": "transactions", "conditions": ["account_type = 'savings'", "amount > 5000"]}}], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you eliminate all entries from the 'customer_details' table where the 'credit_score' is less than 600 and the 'account_balance' is less than 1000?", "human_eval_answer": ["sql.execute(sql_keyword='DELETE', table_name='customer_details', conditions=['credit_score < 600', 'account_balance < 1000'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new record to the 'Transactions' table in our database, where the columns are 'TransactionID', 'Date', 'Amount', 'Type' and 'AccountID', and the values to be inserted are 'TXN12345', '2022-03-01', '5000', 'Deposit', and 'ACC789'?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"Transactions\", columns=[\"TransactionID\", \"Date\", \"Amount\", \"Type\", \"AccountID\"], insert_values=[[\"TXN12345\", \"2022-03-01\", \"5000\", \"Deposit\", \"ACC789\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new entry to the 'Stocks' table in our financial database, where the columns are 'StockID', 'PurchaseDate', 'PurchasePrice', 'Quantity', and 'InvestorID', and the values to be inserted are 'STK54321', '2022-03-15', '150', '100', and 'INV456'?", "human_eval_answer": ["sql.execute(sql_keyword='INSERT INTO', table_name='Stocks', columns=['StockID', 'PurchaseDate', 'PurchasePrice', 'Quantity', 'InvestorID'], insert_values=[['STK54321', '2022-03-15', '150', '100', 'INV456']])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you provide me with the data from the columns 'name', 'age', and 'salary' in the 'employees' table where the 'age' is greater than 30?", "human_eval_answer": ["sql.execute(sql_keyword='SELECT', table_name='employees', columns=['name', 'age', 'salary'], conditions=['age > 30'])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you retrieve the 'product_name', 'product_id', and 'price' from the 'products' table where the 'price' is less than 20?", "human_eval_answer": ["sql.execute(sql_keyword=\"SELECT\", table_name=\"products\", columns=[\"product_name\", \"product_id\", \"price\"], conditions=[\"price < 20\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you create a new table named \"Employee\" in the database with columns \"EmployeeID\", \"FirstName\", \"LastName\", \"Email\", and \"Phone\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Employee\", columns=[\"EmployeeID\", \"FirstName\", \"LastName\", \"Email\", \"Phone\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you establish a new database table called \"Inventory\" with the fields \"ProductID\", \"ProductName\", \"SupplierID\", \"CategoryID\", \"QuantityPerUnit\", and \"UnitPrice\"?", "human_eval_answer": ["sql.execute(sql_keyword=\"CREATE\", table_name=\"Inventory\", columns=[\"ProductID\", \"ProductName\", \"SupplierID\", \"CategoryID\", \"QuantityPerUnit\", \"UnitPrice\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you modify the 'employees' table in our database by changing the 'salary' column for the employee with the ID 'E123' to '5000'?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"employees\", columns=[\"salary\"], update_values=[\"5000\"], conditions=[\"ID = 'E123'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you change the 'price' column in the 'products' table for the product with the SKU 'P789' to '15.99'?", "human_eval_answer": ["sql.execute(sql_keyword=\"UPDATE\", table_name=\"products\", columns=[\"price\"], update_values=[\"15.99\"], conditions=[\"SKU = 'P789'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you remove all records from the 'employees' table where the 'salary' column is less than 50000?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"employees\", conditions=[\"salary < 50000\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you eliminate all entries from the 'orders' table where the 'order_status' column is marked as 'cancelled'?", "human_eval_answer": ["sql.execute(sql_keyword=\"DELETE\", table_name=\"orders\", conditions=[\"order_status = 'cancelled'\"])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new record into the 'Employees' table with the columns 'EmployeeID', 'FirstName', 'LastName', 'Position' and their corresponding values as 'E123', 'John', 'Doe', 'Manager'?", "human_eval_answer": ["sql.execute(sql_keyword=\"INSERT INTO\", table_name=\"Employees\", columns=[\"EmployeeID\", \"FirstName\", \"LastName\", \"Position\"], insert_values=[[\"E123\", \"John\", \"Doe\", \"Manager\"]])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
{"question": "Can you add a new product to the 'Products' table with the columns 'ProductID', 'ProductName', 'Category', 'Price' and their corresponding values as 'P789', 'Apple iPhone 13', 'Electronics', '999'?", "human_eval_answer": ["sql.execute(sql_keyword='INSERT INTO', table_name='Products', columns=['ProductID', 'ProductName', 'Category', 'Price'], insert_values=[['P789', 'Apple iPhone 13', 'Electronics', '999']])"], "function": {"name": "sql.execute", "description": "Execute SQL queries based on user-defined parameters like SQL keyword, table name, column names, and conditions.", "parameters": {"type": "object", "properties": {"sql_keyword": {"type": "string", "enum": ["SELECT", "INSERT INTO", "UPDATE", "DELETE", "CREATE"], "description": "The SQL keyword to define the type of operation."}, "table_name": {"type": "string", "description": "The name of the database table to operate on."}, "columns": {"type": "array", "items": {"type": "string"}, "description": "The column names involved in the SQL operation."}, "insert_values": {"type": "array", "description": "Values of an INSERT statement.", "items": {"type": "array", "items": {"type": "string"}}}, "update_values": {"type": "array", "description": "Values of an UPDATE statement corresponding to columns to set.", "items": {"type": "string"}}, "conditions": {"type": "array", "description": "Conditions for the SQL operation, formatted as a SQL WHERE clause. Put them in the format of [cond1 > val1, cond2 = val2, cond3<val3] and etc.", "items": {"type": "array", "items": {"type": "string"}}}}, "required": ["sql_keyword", "table_name"]}}}
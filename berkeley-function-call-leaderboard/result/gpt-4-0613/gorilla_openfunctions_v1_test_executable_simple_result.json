{"question": "In a game of dice, a player rolls a die 20 times. If the probability of rolling a 6 is 0.6, what is the probability that the player will roll a 6 exactly 5 times?", "function": [{"name": "calc_binomial_probability", "description": "Calculates the probability of getting k successes in n trials.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of trials."}, "k": {"type": "integer", "description": "The number of successes."}, "p": {"type": "integer", "description": "The probability of success."}}, "required": ["n", "k", "p"]}}], "ground_truth_func": ["calc_binomial_probability(n=20, k=5, p=0.6)"], "model_generated_func": ["calc_binomial_probability(n = 20, k = 5, p = 0.6)"]}
{"question": "In a basketball game, a player attempts 30 free throws. If the probability of making a free throw is 0.5, what is the probability that the player will make exactly 15 free throws?", "function": [{"name": "calc_binomial_probability", "description": "Calculates the probability of getting k successes in n trials.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of trials."}, "k": {"type": "integer", "description": "The number of successes."}, "p": {"type": "integer", "description": "The probability of success."}}, "required": ["n", "k", "p"]}}], "ground_truth_func": ["calc_binomial_probability(n=30, k=15, p=0.5)"], "model_generated_func": ["calc_binomial_probability(n = 30, k = 15, p = 0.5)"]}
{"question": "In a machine learning model, you have two feature vectors representing the characteristics of two different objects. The first vector is [0.5, 0.7, 0.2, 0.9, 0.1] and the second vector is [0.4, 0.6, 0.3, 0.8, 0.2]. Can you calculate the cosine similarity between these two vectors using the 'calculate_cosine_similarity' function?", "function": [{"name": "calculate_cosine_similarity", "description": "Calculates the cosine similarity of two vectors.", "parameters": {"type": "object", "properties": {"vectorA": {"type": "array", "items": {"type": "number"}, "description": "The first vector."}, "vectorB": {"type": "array", "items": {"type": "number"}, "description": "The second vector."}}, "required": ["vectorA", "vectorB"]}}], "ground_truth_func": ["calculate_cosine_similarity(vectorA=[0.5, 0.7, 0.2, 0.9, 0.1], vectorB=[0.4, 0.6, 0.3, 0.8, 0.2])"], "model_generated_func": ["calculate_cosine_similarity(vectorA = [0.5, 0.7, 0.2, 0.9, 0.1], vectorB = [0.4, 0.6, 0.3, 0.8, 0.2])"]}
{"question": "In a complex data analysis task, you are given two numerical arrays representing the attributes of two distinct entities. The first array is [0.3, 0.8, 0.1, 0.6, 0.2] and the second array is [0.5, 0.7, 0.4, 0.9, 0.3]. Is it possible to utilize the 'calculate_cosine_similarity' function to compute the cosine similarity between these two arrays?", "function": [{"name": "calculate_cosine_similarity", "description": "Calculates the cosine similarity of two vectors.", "parameters": {"type": "object", "properties": {"vectorA": {"type": "array", "items": {"type": "number"}, "description": "The first vector."}, "vectorB": {"type": "array", "items": {"type": "number"}, "description": "The second vector."}}, "required": ["vectorA", "vectorB"]}}], "ground_truth_func": ["calculate_cosine_similarity(vectorA=[0.3, 0.8, 0.1, 0.6, 0.2], vectorB=[0.5, 0.7, 0.4, 0.9, 0.3])"], "model_generated_func": []}
{"question": "In a physics experiment, you are given an object with a mass of 50 kilograms and a volume of 10 cubic meters. Can you use the 'calculate_density' function to determine the density of this object?", "function": [{"name": "calculate_density", "description": "Calculates the density of an object.", "parameters": {"type": "object", "properties": {"mass": {"type": "integer", "description": "The mass of the object."}, "volume": {"type": "integer", "description": "The volume of the object."}}, "required": ["mass", "volume"]}}], "ground_truth_func": ["calculate_density(mass=50, volume=10)"], "model_generated_func": ["calculate_density(mass = 50, volume = 10)"]}
{"question": "In a complex scientific study, you are presented with a peculiar object that weighs 120 kilograms and occupies a space of 30 cubic meters. Is it possible to employ the 'calculate_density' function to ascertain the density of this peculiar object?", "function": [{"name": "calculate_density", "description": "Calculates the density of an object.", "parameters": {"type": "object", "properties": {"mass": {"type": "integer", "description": "The mass of the object."}, "volume": {"type": "integer", "description": "The volume of the object."}}, "required": ["mass", "volume"]}}], "ground_truth_func": ["calculate_density(mass=120, volume=30)"], "model_generated_func": ["calculate_density(mass = 120, volume = 30)"]}
{"question": "In an advanced physics experiment, you are observing a unique object that has an initial velocity of 15 meters per second. The object is subjected to an acceleration of 9.8 meters per second squared for a duration of 10 seconds. Can you use the 'calculate_displacement' function to determine the displacement of this unique object during this time period?", "function": [{"name": "calculate_displacement", "description": "Calculates the displacement of an object.", "parameters": {"type": "object", "properties": {"initial_velocity": {"type": "number", "description": "The initial velocity of the object."}, "acceleration": {"type": "number", "description": "The acceleration of the object."}, "time": {"type": "number", "description": "The time the object has been moving."}}, "required": ["initial_velocity", "acceleration", "time"]}}], "ground_truth_func": ["calculate_displacement(initial_velocity=15, acceleration=9.8, time=10)"], "model_generated_func": ["calculate_displacement(initial_velocity = 15, acceleration = 9.8, time = 10)"]}
{"question": "In a high-speed car chase, a vehicle is initially moving at a speed of 25 meters per second. Suddenly, the driver steps on the gas pedal, causing the vehicle to accelerate at a rate of 15 meters per second squared. This acceleration lasts for a total of 8 seconds. Can the 'calculate_displacement' function be used to figure out how much the vehicle's position changed during this acceleration period?", "function": [{"name": "calculate_displacement", "description": "Calculates the displacement of an object.", "parameters": {"type": "object", "properties": {"initial_velocity": {"type": "number", "description": "The initial velocity of the object."}, "acceleration": {"type": "number", "description": "The acceleration of the object."}, "time": {"type": "number", "description": "The time the object has been moving."}}, "required": ["initial_velocity", "acceleration", "time"]}}], "ground_truth_func": ["calculate_displacement(initial_velocity=25, acceleration=15, time=8)"], "model_generated_func": []}
{"question": "In a physics experiment, a particle with a charge of 5 coulombs is placed in an electric field with a potential difference of 10 volts. Can the 'calculate_electrostatic_potential_energy' function be used to determine the electrostatic potential energy of the particle in this field?", "function": [{"name": "calculate_electrostatic_potential_energy", "description": "Calculates the electrostatic potential energy.", "parameters": {"type": "object", "properties": {"charge": {"type": "number", "description": "The charge of the object."}, "voltage": {"type": "number", "description": "The voltage of the object."}}, "required": ["charge", "voltage"]}}], "ground_truth_func": ["calculate_electrostatic_potential_energy(charge=5, voltage=10)"], "model_generated_func": []}
{"question": "In a complex physics simulation, a micro-particle possessing a charge of 7.8 coulombs is situated within an electromagnetic field exhibiting a potential difference of 15.2 volts. Is it possible to utilize the 'calculate_electrostatic_potential_energy' function to ascertain the electrostatic potential energy of the micro-particle in this particular field?", "function": [{"name": "calculate_electrostatic_potential_energy", "description": "Calculates the electrostatic potential energy.", "parameters": {"type": "object", "properties": {"charge": {"type": "number", "description": "The charge of the object."}, "voltage": {"type": "number", "description": "The voltage of the object."}}, "required": ["charge", "voltage"]}}], "ground_truth_func": ["calculate_electrostatic_potential_energy(charge=7.8, voltage=15.2)"], "model_generated_func": ["calculate_electrostatic_potential_energy(charge = 7.8, voltage = 15.2)"]}
{"question": "In a high-speed chase scenario, a vehicle initially at rest, suddenly accelerates at a rate of 9.8 m/s\u00b2 for a duration of 12 seconds. Can we use the 'calculate_final_velocity' function to determine the final velocity of the vehicle after this period of acceleration?", "function": [{"name": "calculate_final_velocity", "description": "Calculates the final velocity of an object.", "parameters": {"type": "object", "properties": {"initial_velocity": {"type": "number", "description": "The initial velocity of the object."}, "acceleration": {"type": "number", "description": "The acceleration of the object."}, "time": {"type": "number", "description": "The time the object has been moving."}}, "required": ["initial_velocity", "acceleration", "time"]}}], "ground_truth_func": ["calculate_final_velocity(initial_velocity=0, acceleration=9.8, time=12)"], "model_generated_func": []}
{"question": "In a physics experiment, a ball is dropped from a height with an initial velocity of 0 m/s. If the acceleration due to gravity is considered as 9.8 m/s\u00b2 and the ball is in free fall for 7 seconds, can the 'calculate_final_velocity' function be used to ascertain the final velocity of the ball at the end of this time period?", "function": [{"name": "calculate_final_velocity", "description": "Calculates the final velocity of an object.", "parameters": {"type": "object", "properties": {"initial_velocity": {"type": "number", "description": "The initial velocity of the object."}, "acceleration": {"type": "number", "description": "The acceleration of the object."}, "time": {"type": "number", "description": "The time the object has been moving."}}, "required": ["initial_velocity", "acceleration", "time"]}}], "ground_truth_func": ["calculate_final_velocity(initial_velocity=0, acceleration=9.8, time=7)"], "model_generated_func": []}
{"question": "In a financial scenario, suppose you have invested $5000 in a fixed deposit scheme that offers an annual interest rate of 5%. If you plan to keep the money in the deposit for 10 years, can you use the 'calculate_future_value' function to determine the value of your investment at the end of this period?", "function": [{"name": "calculate_future_value", "description": "Calculates the future value of an investment.", "parameters": {"type": "object", "properties": {"present_value": {"type": "integer", "description": "The present value of the investment."}, "interest_rate": {"type": "integer", "description": "The interest rate of the investment."}, "periods": {"type": "integer", "description": "The number of periods."}}, "required": ["present_value", "interest_rate", "periods"]}}], "ground_truth_func": ["calculate_future_value(present_value=5000, interest_rate=0.05, periods=10)"], "model_generated_func": ["calculate_future_value(present_value = 5000, interest_rate = 5, periods = 10)"]}
{"question": "In a hypothetical situation, you've decided to put $8000 into a savings account that offers a 4% annual interest rate. You intend to leave the money untouched for 15 years. Can the 'calculate_future_value' function be used to ascertain what your investment will be worth at the end of this time frame?", "function": [{"name": "calculate_future_value", "description": "Calculates the future value of an investment.", "parameters": {"type": "object", "properties": {"present_value": {"type": "integer", "description": "The present value of the investment."}, "interest_rate": {"type": "integer", "description": "The interest rate of the investment."}, "periods": {"type": "integer", "description": "The number of periods."}}, "required": ["present_value", "interest_rate", "periods"]}}], "ground_truth_func": ["calculate_future_value(present_value=8000, interest_rate=0.04, periods=15)"], "model_generated_func": []}
{"question": "In a complex scenario, you are a data analyst and you have been given a list of daily temperatures for the past month in a city. The temperatures are as follows: 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80 degrees Celsius. Can you use the 'calculate_mean' function to determine the average temperature for the past month?", "function": [{"name": "calculate_mean", "description": "Calculates the mean of a list of numbers.", "parameters": {"type": "object", "properties": {"numbers": {"type": "array", "items": {"type": "number"}, "description": "The list of numbers."}}, "required": ["numbers"]}}], "ground_truth_func": ["calculate_mean(numbers=[22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80])"], "model_generated_func": ["calculate_mean(numbers = [22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80])"]}
{"question": "As a sports statistician, you have been tasked with analyzing the performance of a basketball player over the course of a season. You have been given the player's points scored in each game, which are as follows: 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160. Can you use the 'calculate_mean' function to determine the player's average points per game for the season?", "function": [{"name": "calculate_mean", "description": "Calculates the mean of a list of numbers.", "parameters": {"type": "object", "properties": {"numbers": {"type": "array", "items": {"type": "number"}, "description": "The list of numbers."}}, "required": ["numbers"]}}], "ground_truth_func": ["calculate_mean(numbers=[15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160])"], "model_generated_func": ["calculate_mean(numbers = [15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160])"]}
{"question": "As a cryptographer, you are working on a new encryption algorithm that involves permutations of characters. You have a set of 26 characters (the English alphabet) and you want to know how many different permutations can be generated if you choose 5 characters at a time. Can you use the 'calculate_permutations' function to find out this information?", "function": [{"name": "calculate_permutations", "description": "Calculates the number of permutations of k elements from a set of n elements.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of elements in the set."}, "k": {"type": "integer", "description": "The number of elements to choose."}}, "required": ["n", "k"]}}], "ground_truth_func": ["calculate_permutations(n=26, k=5)"], "model_generated_func": ["calculate_permutations(n = 26, k = 5)"]}
{"question": "As a biologist, you are studying the genetic diversity of a certain species of plants. You have identified 30 unique genes and you are interested in understanding the different combinations that can be formed by selecting 7 genes at a time. Can you use the 'calculate_permutations' function to determine this?", "function": [{"name": "calculate_permutations", "description": "Calculates the number of permutations of k elements from a set of n elements.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of elements in the set."}, "k": {"type": "integer", "description": "The number of elements to choose."}}, "required": ["n", "k"]}}], "ground_truth_func": ["calculate_permutations(n=30, k=7)"], "model_generated_func": ["calculate_permutations(n = 30, k = 7)"]}
{"question": "As a financial analyst, you are studying the volatility of a certain stock's daily closing prices 1000,2000,3000,4000,5000,7000,9000,15000,20000,30000 over the past 10 trading days. You have recorded the closing prices and now you want to understand the dispersion of these prices. Can you use the 'calculate_standard_deviation' function to determine this using the list of recorded closing prices?", "function": [{"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"type": "object", "properties": {"numbers": {"type": "array", "items": {"type": "number"}, "description": "The list of numbers."}}, "required": ["numbers"]}}], "ground_truth_func": ["calculate_standard_deviation(numbers=[1000,2000,3000,4000,5000,7000,9000,15000,20000,30000])"], "model_generated_func": ["calculate_standard_deviation(numbers = [1000, 2000, 3000, 4000, 5000, 7000, 9000, 15000, 20000, 30000])"]}
{"question": "As a sports statistician, you are analyzing the performance of a basketball player in terms of points scored per game over the past 12 games. You have gathered the data [30,20,25,12,59,23,64,21,67,12,23,43]and now you want to understand the variability in the player's scoring. Can you use the 'calculate_standard_deviation' function to determine this using the list of points scored per game?", "function": [{"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"type": "object", "properties": {"numbers": {"type": "array", "items": {"type": "number"}, "description": "The list of numbers."}}, "required": ["numbers"]}}], "ground_truth_func": ["calculate_standard_deviation(numbers=[30,20,25,12,59,23,64,21,67,12,23,43])"], "model_generated_func": ["calculate_standard_deviation(numbers = [30, 20, 25, 12, 59, 23, 64, 21, 67, 12, 23, 43])"]}
{"question": "As an architect, you are designing a triangular park. The park's base is planned to be 500 meters and the height is 300 meters. Can you use the 'calculate_triangle_area' function to determine the total area of the park?", "function": [{"name": "calculate_triangle_area", "description": "Calculates the area of a triangle given its base and height.", "parameters": {"type": "object", "properties": {"base": {"type": "integer", "description": "The base of the triangle."}, "height": {"type": "integer", "description": "The height of the triangle."}}, "required": ["base", "height"]}}], "ground_truth_func": ["calculate_triangle_area(base=500, height=300)"], "model_generated_func": ["calculate_triangle_area(base = 500, height = 300)"]}
{"question": "As a civil engineer, you are tasked with designing a triangular dam. The proposed dimensions for the dam include a base of 700 meters and a height of 450 meters. Can you utilize the 'calculate_triangle_area' function to ascertain the total area of the dam's face?", "function": [{"name": "calculate_triangle_area", "description": "Calculates the area of a triangle given its base and height.", "parameters": {"type": "object", "properties": {"base": {"type": "integer", "description": "The base of the triangle."}, "height": {"type": "integer", "description": "The height of the triangle."}}, "required": ["base", "height"]}}], "ground_truth_func": ["calculate_triangle_area(base=700, height=450)"], "model_generated_func": ["calculate_triangle_area(base = 700, height = 450)"]}
{"question": "As a financial analyst, you are tasked with converting a sum of 5000 Euros to Japanese Yen for a business transaction. Can you use the 'convert_currency' function to determine the equivalent amount in Yen? Please note that the ISO currency code for Euro is 'EUR' and for Japanese Yen is 'JPY'.", "function": [{"name": "convert_currency", "description": "Converts a given amount from one currency to another using the ExchangeRate-API.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "The amount of money to convert."}, "from_currency": {"type": "string", "description": "The ISO currency code for the base currency."}, "to_currency": {"type": "string", "description": "The ISO currency code for the target currency."}}, "required": ["amount", "from_currency", "to_currency"]}, "returns": {"type": "number", "description": "The converted amount in the target currency."}}], "ground_truth_func": ["convert_currency(amount=5000, from_currency='EUR', to_currency='JPY')"], "model_generated_func": ["convert_currency(amount = 5000, from_currency = 'EUR', to_currency = 'JPY')"]}
{"question": "As a travel agent, you are planning a trip for a client who is traveling from the United States to the United Kingdom. The client has a budget of 3000 US Dollars and wants to know how much this would be in British Pounds. Can you use the 'convert_currency' function to calculate this? Remember, the ISO currency code for US Dollar is 'USD' and for British Pound is 'GBP'.", "function": [{"name": "convert_currency", "description": "Converts a given amount from one currency to another using the ExchangeRate-API.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "The amount of money to convert."}, "from_currency": {"type": "string", "description": "The ISO currency code for the base currency."}, "to_currency": {"type": "string", "description": "The ISO currency code for the target currency."}}, "required": ["amount", "from_currency", "to_currency"]}, "returns": {"type": "number", "description": "The converted amount in the target currency."}}], "ground_truth_func": ["convert_currency(amount=3000, from_currency='USD', to_currency='GBP')"], "model_generated_func": ["convert_currency(amount = 3000, from_currency = 'USD', to_currency = 'GBP')"]}
{"question": "As a physics student, you are studying the motion of a particle moving along a straight line. The position of the particle at any time 'x' is given by the function f(x) = 3t^2 + 2x + 1. You are interested in understanding the velocity of the particle at a specific time, say t = 5 seconds. Can you use the 'estimate_derivative' function to calculate this? Remember, the derivative of the position function gives the velocity.", "function": [{"name": "estimate_derivative", "description": "Estimate the derivative of a function at a given point.", "parameters": {"type": "object", "properties": {"function": {"type": "string", "description": "The function to calculate the derivative of."}, "x": {"type": "integer", "description": "The point to calculate the derivative at."}}, "required": ["function", "x"]}}], "ground_truth_func": ["estimate_derivative(function=lambda x: 3*x**2 + 2*x + 1, x=5)"], "model_generated_func": ["estimate_derivative(function = '3*t^2 + 2*t + 1', x = 5)"]}
{"question": "As a financial analyst, you are studying the growth of a company's revenue over time. The revenue of the company at any time 'x' is given by the function f(x) = 4x^3 + 3x^2 + 2x + 1. You are interested in understanding the rate of change of the company's revenue at a specific time, say t = 7 years. Can you use the 'estimate_derivative' function to calculate this? Remember, the derivative of the revenue function gives the rate of change.", "function": [{"name": "estimate_derivative", "description": "Estimate the derivative of a function at a given point.", "parameters": {"type": "object", "properties": {"function": {"type": "string", "description": "The function to calculate the derivative of."}, "x": {"type": "integer", "description": "The point to calculate the derivative at."}}, "required": ["function", "x"]}}], "ground_truth_func": ["estimate_derivative(function=lambda x: 4*x**3 + 3*x**2 + 2*x + 1, x=7)"], "model_generated_func": ["estimate_derivative(function = '4*x^3 + 3*x^2 + 2*x + 1', x = 7)"]}
{"question": "As a language enthusiast, you've come across a slang term \"lit\" that you don't understand. Can you use the 'find_term_on_urban_dictionary' function to find the definition of this term? Remember, the term you're looking for is \"lit\".", "function": [{"name": "find_term_on_urban_dictionary", "description": "Finds the definition of a term on Urban Dictionary.", "parameters": {"type": "object", "properties": {"term": {"type": "string", "description": "The term to find the definition of."}}, "required": ["term"]}}], "ground_truth_func": ["find_term_on_urban_dictionary(term=\"lit\")"], "model_generated_func": ["find_term_on_urban_dictionary(term = 'lit')"]}
{"question": "As a music lover, you've stumbled upon a hip-hop song with the term \"flex\" repeatedly used in the lyrics. You're curious about its meaning in this context. Could you utilize the 'find_term_on_urban_dictionary' function to decipher what \"flex\" signifies in this genre? Please note, the term you need to search for is \"flex\".", "function": [{"name": "find_term_on_urban_dictionary", "description": "Finds the definition of a term on Urban Dictionary.", "parameters": {"type": "object", "properties": {"term": {"type": "string", "description": "The term to find the definition of."}}, "required": ["term"]}}], "ground_truth_func": ["find_term_on_urban_dictionary(term=\"flex\")"], "model_generated_func": ["find_term_on_urban_dictionary(term = 'flex')"]}
{"question": "As an aspiring artist, you've decided to create a large circular mural on a wall in your city. You need to calculate the area of the circle to determine how much paint you'll need. Could you use the 'geometry_area_circle' function to calculate the area? Please note, the radius of the circle is 15 feet.", "function": [{"name": "geometry_area_circle", "description": "Calculates the area of a circle.", "parameters": {"type": "object", "properties": {"radius": {"type": "integer", "description": "The radius of the circle."}}, "required": ["radius"]}}], "ground_truth_func": ["geometry_area_circle(radius=15)"], "model_generated_func": ["geometry_area_circle(radius = 15)"]}
{"question": "As a landscape architect, you're designing a circular garden for a client. To plan the amount of sod you'll need, you need to calculate the area of the garden. The garden has a radius of 20 feet. Would the 'geometry_area_circle' function be useful in this scenario to calculate the area?", "function": [{"name": "geometry_area_circle", "description": "Calculates the area of a circle.", "parameters": {"type": "object", "properties": {"radius": {"type": "integer", "description": "The radius of the circle."}}, "required": ["radius"]}}], "ground_truth_func": ["geometry_area_circle(radius=20)"], "model_generated_func": []}
{"question": "As a journalist, you are writing an article about the current COVID-19 situation in Brazil. To provide accurate information, you need the most recent data on active COVID-19 cases in Brazil. Can the 'get_active_covid_case_by_country' function assist you in obtaining this data if you specify 'Brazil' as the country?", "function": [{"name": "get_active_covid_case_by_country", "description": "Finds the most up to date active cases of a country result from COVID.", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "The country to find the active cases of."}}, "required": ["country"]}}], "ground_truth_func": ["get_active_covid_case_by_country(country='Brazil')"], "model_generated_func": []}
{"question": "As a health analyst, you are tasked to monitor the ongoing COVID-19 situation in Spain. To ensure the accuracy of your report, you need the latest data on active COVID-19 cases in Spain. Can the 'get_active_covid_case_by_country' function provide you with this information if you input 'Spain' as the country?", "function": [{"name": "get_active_covid_case_by_country", "description": "Finds the most up to date active cases of a country result from COVID.", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "The country to find the active cases of."}}, "required": ["country"]}}], "ground_truth_func": ["get_active_covid_case_by_country(country='Spain')"], "model_generated_func": []}
{"question": "As a financial analyst, you are researching the company behind the stock named 'AAPL'. Can the 'get_company_name_by_stock_name' function provide you with the company's name if you input 'AAPL' as the stock name?", "function": [{"name": "get_company_name_by_stock_name", "description": "Finds the company name of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}], "ground_truth_func": ["get_company_name_by_stock_name(stock_name='AAPL')"], "model_generated_func": []}
{"question": "As an investor, you are interested in the company that owns the 'GOOGL' stock. Can you use the 'get_company_name_by_stock_name' function to find out the company's name by providing 'GOOGL' as the stock name?", "function": [{"name": "get_company_name_by_stock_name", "description": "Finds the company name of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}], "ground_truth_func": ["get_company_name_by_stock_name(stock_name='GOOGL')"], "model_generated_func": ["get_company_name_by_stock_name(stock_name = 'GOOGL')"]}
{"question": "As a cybersecurity analyst, you suspect a potential breach from an IP address '192.168.1.1'. Can you use the 'get_coordinate_by_ip_address' function to find out the geographical location of this IP address by providing '192.168.1.1' as the IP address?", "function": [{"name": "get_coordinate_by_ip_address", "description": "Finds the latitude and longitude of an IP address.", "parameters": {"type": "object", "properties": {"ip_address": {"type": "string", "description": "The IP address to find the location of."}}, "required": ["ip_address"]}}], "ground_truth_func": ["get_coordinate_by_ip_address(ip_address='192.168.1.1')"], "model_generated_func": ["get_coordinate_by_ip_address(ip_address = '192.168.1.1')"]}
{"question": "As a network administrator, you've noticed some suspicious activity from the IP address '172.16.254.1'. Could you employ the 'get_coordinate_by_ip_address' function to ascertain the geographical coordinates of this particular IP address by supplying '172.16.254.1' as the IP address?", "function": [{"name": "get_coordinate_by_ip_address", "description": "Finds the latitude and longitude of an IP address.", "parameters": {"type": "object", "properties": {"ip_address": {"type": "string", "description": "The IP address to find the location of."}}, "required": ["ip_address"]}}], "ground_truth_func": ["get_coordinate_by_ip_address(ip_address='172.16.254.1')"], "model_generated_func": ["get_coordinate_by_ip_address(ip_address = '172.16.254.1')"]}
{"question": "As a travel agent, you have a client who is interested in visiting the city of 'Paris'. Could you use the 'get_coordinates_from_city' function to determine the geographical coordinates of 'Paris' by providing 'Paris' as the city name?", "function": [{"name": "get_coordinates_from_city", "description": "Fetches the latitude and longitude of a given city name using the Maps.co Geocoding API.", "parameters": {"type": "object", "properties": {"city_name": {"type": "string", "description": "The name of the city."}}, "required": ["city_name"]}, "returns": {"type": "tuple", "description": "The latitude and longitude of the city."}}], "ground_truth_func": ["get_coordinates_from_city(city_name='Paris')"], "model_generated_func": ["get_coordinates_from_city(city_name = 'Paris')"]}
{"question": "As a wildlife researcher, you are planning to study the migration patterns of a certain bird species in 'Cairo'. Can you use the 'get_coordinates_from_city' function to find the exact latitude and longitude of 'Cairo' by inputting 'Cairo' as the city name?", "function": [{"name": "get_coordinates_from_city", "description": "Fetches the latitude and longitude of a given city name using the Maps.co Geocoding API.", "parameters": {"type": "object", "properties": {"city_name": {"type": "string", "description": "The name of the city."}}, "required": ["city_name"]}, "returns": {"type": "tuple", "description": "The latitude and longitude of the city."}}], "ground_truth_func": ["get_coordinates_from_city(city_name='Cairo')"], "model_generated_func": []}
{"question": "As a health researcher, you are studying the impact of COVID-19 in 'Brazil'. Can you use the 'get_covid_death_by_country' function to find the most up-to-date total deaths in 'Brazil' by inputting 'Brazil' as the country name?", "function": [{"name": "get_covid_death_by_country", "description": "Finds the most up to date total deaths of a country result from COVID.", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "The country to find the total deaths of."}}, "required": ["country"]}}], "ground_truth_func": ["get_covid_death_by_country(country='Brazil')"], "model_generated_func": ["get_covid_death_by_country(country = 'Brazil')"]}
{"question": "As an epidemiologist, you are currently investigating the mortality rate of COVID-19 in 'India'. Could you employ the 'get_covid_death_by_country' function to obtain the most recent total death count in 'India' by specifying 'India' as the country parameter?", "function": [{"name": "get_covid_death_by_country", "description": "Finds the most up to date total deaths of a country result from COVID.", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "The country to find the total deaths of."}}, "required": ["country"]}}], "ground_truth_func": ["get_covid_death_by_country(country='India')"], "model_generated_func": ["get_covid_death_by_country(country = 'India')"]}
{"question": "As a cartographer, you are working on a map of a city and you need to determine the exact distance between two points of interest. The points are located at coordinates (45.76, 4.85) and (48.85, 2.35). Can you use the 'get_distance' function to calculate the distance between these two points by providing these coordinates as 'pointA' and 'pointB' parameters respectively?", "function": [{"name": "get_distance", "description": "Calculates the distance between two 2D points.", "parameters": {"type": "object", "properties": {"pointA": {"type": "string", "description": "The first point."}, "pointB": {"type": "string", "description": "The second point."}}, "required": ["pointA", "pointB"]}}], "ground_truth_func": ["get_distance(pointA=(45.76, 4.85), pointB=(48.85, 2.35))"], "model_generated_func": ["get_distance(pointA = '45.76, 4.85', pointB = '48.85, 2.35')"]}
{"question": "As a wildlife researcher, you are tracking the movement of a particular animal in a forest. You have marked two locations where the animal was spotted, the coordinates are (32.71, -117.16) for the first location and (34.05, -118.25) for the second location. Can you use the 'get_distance' function to find out the distance between these two spots by inputting these coordinates as 'pointA' and 'pointB' parameters respectively?", "function": [{"name": "get_distance", "description": "Calculates the distance between two 2D points.", "parameters": {"type": "object", "properties": {"pointA": {"type": "string", "description": "The first point."}, "pointB": {"type": "string", "description": "The second point."}}, "required": ["pointA", "pointB"]}}], "ground_truth_func": ["get_distance(pointA=(32.71, -117.16), pointB=(34.05, -118.25))"], "model_generated_func": ["get_distance(pointA = '32.71, -117.16', pointB = '34.05, -118.25')"]}
{"question": "As a mathematician, you are studying the Fibonacci sequence and you want to generate the first 20 numbers in this sequence. Can you use the 'get_fibonacci_sequence' function to calculate these numbers by inputting '20' as the 'n' parameter?", "function": [{"name": "get_fibonacci_sequence", "description": "Calculates the n numbers of the Fibonacci.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of Fibonacci numbers to calculate."}}, "required": ["n"]}}], "ground_truth_func": ["get_fibonacci_sequence(n=20)"], "model_generated_func": ["get_fibonacci_sequence(n = 20)"]}
{"question": "As a computer science student, you are tasked with a project that involves the Fibonacci sequence. Your professor wants you to generate the first 50 numbers of this sequence. Can you utilize the 'get_fibonacci_sequence' function to accomplish this task by setting '50' as the value for the 'n' parameter?", "function": [{"name": "get_fibonacci_sequence", "description": "Calculates the n numbers of the Fibonacci.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number of Fibonacci numbers to calculate."}}, "required": ["n"]}}], "ground_truth_func": ["get_fibonacci_sequence(n=50)"], "model_generated_func": ["get_fibonacci_sequence(n = 50)"]}
{"question": "As a product manager, you are interested in tracking the price of a specific product on Amazon. The product has an Amazon ASIN of 'B08N5WRWNW'. Can you use the 'get_price_by_amazon_ASIN' function to find the current price of this product by setting 'B08N5WRWNW' as the value for the 'ASIN' parameter?", "function": [{"name": "get_price_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}], "ground_truth_func": ["get_price_by_amazon_ASIN(ASIN='B08N5WRWNW')"], "model_generated_func": ["get_price_by_amazon_ASIN(ASIN = 'B08N5WRWNW')"]}
{"question": "As an inventory manager, you need to monitor the price of a product listed on Amazon with an ASIN of 'B07HJXVHSS'. Would it be possible to obtain the current price of this product using the 'get_price_by_amazon_ASIN' function and providing 'B07HJXVHSS' as the 'ASIN' parameter value?", "function": [{"name": "get_price_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}], "ground_truth_func": ["get_price_by_amazon_ASIN(ASIN='B07HJXVHSS')"], "model_generated_func": []}
{"question": "As a mathematics teacher, you are preparing a lesson on prime factorization and you want to use the number 4567 as an example. Can you use the 'get_prime_factors' function to calculate the prime factors of 4567 by providing '4567' as the 'number' parameter value?", "function": [{"name": "get_prime_factors", "description": "Calculates the prime factors of a number.", "parameters": {"type": "object", "properties": {"number": {"type": "integer", "description": "The number to calculate the prime factors of."}}, "required": ["number"]}}], "ground_truth_func": ["get_prime_factors(number=4567)"], "model_generated_func": ["get_prime_factors(number = 4567)"]}
{"question": "As a cryptographer, you are working on a new encryption algorithm that involves prime factorization. You need to test your algorithm with the number 7891. Can you use the 'get_prime_factors' function to determine the prime factors of 7891 by setting '7891' as the 'number' parameter value?", "function": [{"name": "get_prime_factors", "description": "Calculates the prime factors of a number.", "parameters": {"type": "object", "properties": {"number": {"type": "integer", "description": "The number to calculate the prime factors of."}}, "required": ["number"]}}], "ground_truth_func": ["get_prime_factors(number=7891)"], "model_generated_func": ["get_prime_factors(number = 7891)"]}
{"question": "As a product reviewer, you are writing an article about a specific product found on Amazon. You only have the Amazon ASIN, which is 'B08L8KC1J7'. Can you use the 'get_product_name_by_amazon_ASIN' function to find the name of the product by setting 'B08L8KC1J7' as the 'ASIN' parameter value?", "function": [{"name": "get_product_name_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}], "ground_truth_func": ["get_product_name_by_amazon_ASIN(ASIN='B08L8KC1J7')"], "model_generated_func": []}
{"question": "As an online shopper, you stumbled upon an Amazon product with an ASIN 'B07FZ8S74R' and you are curious about its name. Can you utilize the 'get_product_name_by_amazon_ASIN' function and input 'B07FZ8S74R' as the 'ASIN' parameter to discover the product's name?", "function": [{"name": "get_product_name_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}], "ground_truth_func": ["get_product_name_by_amazon_ASIN(ASIN='B07FZ8S74R')"], "model_generated_func": ["get_product_name_by_amazon_ASIN(ASIN = 'B07FZ8S74R')"]}
{"question": "As an online shopper, you are interested in a product on Amazon with an ASIN 'B08BHXG144' and you want to know its rating. Can you use the 'get_rating_by_amazon_ASIN' function and input 'B08L5WGQGJ' as the 'ASIN' parameter to find out the product's rating?", "function": [{"name": "get_rating_by_amazon_ASIN", "description": "Finds the rating of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}], "ground_truth_func": ["get_rating_by_amazon_ASIN(ASIN='B08BHXG144')"], "model_generated_func": []}
{"question": "As a consumer, you've come across an Amazon product with an ASIN 'B07FZ8S74R' and you're curious about its rating. Would it be possible to utilize the 'get_rating_by_amazon_ASIN' function, inputting 'B07FZ8S74R' into the 'ASIN' parameter, to discover the rating of this product?", "function": [{"name": "get_rating_by_amazon_ASIN", "description": "Finds the rating of a product by its Amazon ASIN.", "parameters": {"type": "object", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}], "ground_truth_func": ["get_rating_by_amazon_ASIN(ASIN='B07FZ8S74R')"], "model_generated_func": ["get_rating_by_amazon_ASIN(ASIN = 'B07FZ8S74R')"]}
{"question": "As an investor, you're interested in the historical performance of the Apple Inc. stock. Would it be possible to use the 'get_stock_history' function, setting 'AAPL' as the 'stock_name' parameter, and '1mo' for the 'interval' parameter, to get the monthly stock history of Apple Inc.? Also, could you set the 'diffandsplits' parameter to 'true' to see if there were any stock splits or dividends during this period?", "function": [{"name": "get_stock_history", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}, "interval": {"type": "string", "description": "The interval of the stock history. Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo"}, "diffandsplits": {"type": "boolean", "description": "The diffandsplits of the stock history. Allows one of following : true|false"}}, "required": ["stock_name", "interval"]}}], "ground_truth_func": ["get_stock_history(stock_name='AAPL', interval='1mo', diffandsplits=True)"], "model_generated_func": ["get_stock_history(stock_name = 'AAPL', interval = '1mo', diffandsplits = True)"]}
{"question": "As a financial analyst, you are tasked with examining the historical data of Microsoft Corporation's stock. Could you utilize the 'get_stock_history' function, inputting 'MSFT' as the 'stock_name' parameter, and '1wk' as the 'interval' parameter, to retrieve the weekly stock history of Microsoft Corporation? Additionally, could you adjust the 'diffandsplits' parameter to 'false' to exclude any stock splits or dividends during this period?", "function": [{"name": "get_stock_history", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}, "interval": {"type": "string", "description": "The interval of the stock history. Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo"}, "diffandsplits": {"type": "boolean", "description": "The diffandsplits of the stock history. Allows one of following : true|false"}}, "required": ["stock_name", "interval"]}}], "ground_truth_func": ["get_stock_history(stock_name='MSFT', interval='1wk', diffandsplits=False)"], "model_generated_func": ["get_stock_history(stock_name = 'MSFT', interval = '1wk', diffandsplits = False)"]}
{"question": "As an investment advisor, you are required to analyze the current price of Apple Inc.'s stock. Can you use the 'get_stock_price_by_stock_name' function, specifying 'AAPL' as the 'stock_name' parameter, to find the current price of Apple Inc.'s stock?", "function": [{"name": "get_stock_price_by_stock_name", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}], "ground_truth_func": ["get_stock_price_by_stock_name(stock_name='AAPL')"], "model_generated_func": ["get_stock_price_by_stock_name(stock_name = 'AAPL')"]}
{"question": "As a financial analyst, you are tasked with monitoring the stock market performance of Microsoft Corporation. Could you utilize the 'get_stock_price_by_stock_name' function and input 'MSFT' into the 'stock_name' parameter to determine the current stock price of Microsoft Corporation?", "function": [{"name": "get_stock_price_by_stock_name", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}], "ground_truth_func": ["get_stock_price_by_stock_name(stock_name='MSFT')"], "model_generated_func": ["get_stock_price_by_stock_name(stock_name = 'MSFT')"]}
{"question": "As a geographer, you are working on a project that requires you to identify the time zones of various locations. Could you use the 'get_time_zone_by_coord' function and input '123.45' into the 'long' parameter and '-67.89' into the 'lat' parameter to find out the timezone of the coordinate at longitude 123.45 and latitude -67.89?", "function": [{"name": "get_time_zone_by_coord", "description": "Finds the timezone of a coordinate.", "parameters": {"type": "object", "properties": {"long": {"type": "string", "description": "The longitude of the coordinate."}, "lat": {"type": "string", "description": "The latitude of the coordinate."}}, "required": ["long", "lat"]}}], "ground_truth_func": ["get_time_zone_by_coord(long='123.45', lat='-67.89')"], "model_generated_func": ["get_time_zone_by_coord(long = '123.45', lat = '-67.89')"]}
{"question": "As a meteorologist, you are tracking a storm system and need to report the local time where the storm is currently located. Can you use the 'get_time_zone_by_coord' function, inputting '80.75' for the 'long' parameter and '35.22' for the 'lat' parameter, to determine the timezone of the storm's current position at longitude 80.75 and latitude 35.22?", "function": [{"name": "get_time_zone_by_coord", "description": "Finds the timezone of a coordinate.", "parameters": {"type": "object", "properties": {"long": {"type": "string", "description": "The longitude of the coordinate."}, "lat": {"type": "string", "description": "The latitude of the coordinate."}}, "required": ["long", "lat"]}}], "ground_truth_func": ["get_time_zone_by_coord(long='80.75', lat='35.22')"], "model_generated_func": ["get_time_zone_by_coord(long = '80.75', lat = '35.22')"]}
{"question": "As a climate researcher, you are studying the temperature variations in the Arctic region. You are particularly interested in the current temperature at the coordinates 90.00 (latitude) and 0.00 (longitude). Can you use the 'get_weather_data' function to fetch the current temperature data from the Open-Meteo API for these specific coordinates?", "function": [{"name": "get_weather_data", "description": "Fetches weather data from the Open-Meteo API for the given latitude and longitude.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "array", "items": {"type": "number"}, "description": "The latitude and longitude of the location."}}, "required": ["coordinates"]}, "returns": {"type": "float", "description": "The current temperature in the coordinates you've asked for"}}], "ground_truth_func": ["get_weather_data(coordinates=[90.00, 0.00])"], "model_generated_func": ["get_weather_data(coordinates = [90.0, 0.0])"]}
{"question": "As an environmental scientist, you are investigating the impact of climate change in the Sahara Desert. You need to know the current temperature at the coordinates 25.00 (latitude) and 13.00 (longitude). Would it be possible to utilize the 'get_weather_data' function to retrieve the present temperature data from the Open-Meteo API for these exact coordinates?", "function": [{"name": "get_weather_data", "description": "Fetches weather data from the Open-Meteo API for the given latitude and longitude.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "array", "items": {"type": "number"}, "description": "The latitude and longitude of the location."}}, "required": ["coordinates"]}, "returns": {"type": "float", "description": "The current temperature in the coordinates you've asked for"}}], "ground_truth_func": ["get_weather_data(coordinates=[25.00, 13.00])"], "model_generated_func": []}
{"question": "As a cybersecurity analyst, you are investigating a potential cyber attack that seems to originate from a specific IP address. The IP address in question is 192.168.1.1. Could you use the 'get_zipcode_by_ip_address' function to determine the zipcode of the location from where this IP address is being used?", "function": [{"name": "get_zipcode_by_ip_address", "description": "Finds the zipcode of an IP address.", "parameters": {"type": "object", "properties": {"ip_address": {"type": "string", "description": "The IP address to find the location of."}}, "required": ["ip_address"]}}], "ground_truth_func": ["get_zipcode_by_ip_address(ip_address=\"192.168.1.1\")"], "model_generated_func": ["get_zipcode_by_ip_address(ip_address = '192.168.1.1')"]}
{"question": "As an IT specialist, you've been asked to track the location of a suspicious activity on your company's network. The activity seems to be coming from an IP address 172.16.254.1. Can you utilize the 'get_zipcode_by_ip_address' function to identify the zipcode of the location where this IP address is being utilized?", "function": [{"name": "get_zipcode_by_ip_address", "description": "Finds the zipcode of an IP address.", "parameters": {"type": "object", "properties": {"ip_address": {"type": "string", "description": "The IP address to find the location of."}}, "required": ["ip_address"]}}], "ground_truth_func": ["get_zipcode_by_ip_address(ip_address='172.16.254.1')"], "model_generated_func": ["get_zipcode_by_ip_address(ip_address = '172.16.254.1')"]}
{"question": "As a data analyst, you've been given two matrices to multiply in order to analyze a complex data set. The first matrix, matA, is [[1, 2], [3, 4]] and the second matrix, matB, is [[5, 6], [7, 8]]. Can you use the 'mat_mul' function to perform this matrix multiplication?", "function": [{"name": "mat_mul", "description": "Multiplies two matrices.", "parameters": {"type": "object", "properties": {"matA": {"type": "array", "description": "The first matrix.", "items": {"type": "object"}}, "matB": {"type": "array", "description": "The second matrix.", "items": {"type": "object"}}}, "required": ["matA", "matB"]}}], "ground_truth_func": ["mat_mul(matA=[[1, 2], [3, 4]], matB=[[5, 6], [7, 8]])"], "model_generated_func": ["mat_mul(matA = [[1, 2], [3, 4]], matB = [[5, 6], [7, 8]])"]}
{"question": "As a physicist, you're working on a quantum mechanics problem that requires the multiplication of two matrices. The first matrix, matA, is [[2, 3], [4, 5]] and the second matrix, matB, is [[6, 7], [8, 9]]. Could you utilize the 'mat_mul' function to carry out this matrix multiplication operation?", "function": [{"name": "mat_mul", "description": "Multiplies two matrices.", "parameters": {"type": "object", "properties": {"matA": {"type": "array", "description": "The first matrix.", "items": {"type": "object"}}, "matB": {"type": "array", "description": "The second matrix.", "items": {"type": "object"}}}, "required": ["matA", "matB"]}}], "ground_truth_func": ["mat_mul(matA=[[2, 3], [4, 5]], matB=[[6, 7], [8, 9]])"], "model_generated_func": ["mat_mul(matA = [[2, 3], [4, 5]], matB = [[6, 7], [8, 9]])"]}
{"question": "As a mathematician, you are working on a complex combinatorics problem that requires the calculation of factorials. You need to find the factorial of the number 7. Can you use the 'math_factorial' function to calculate this?", "function": [{"name": "math_factorial", "description": "Calculates the factorial of a number.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number to calculate the factorial of."}}, "required": ["n"]}}], "ground_truth_func": ["math_factorial(n=7)"], "model_generated_func": ["math_factorial(n = 7)"]}
{"question": "As a physics student, you are studying quantum mechanics and come across a problem that requires you to calculate the factorial of 12. Can you use the 'math_factorial' function to solve this problem?", "function": [{"name": "math_factorial", "description": "Calculates the factorial of a number.", "parameters": {"type": "object", "properties": {"n": {"type": "integer", "description": "The number to calculate the factorial of."}}, "required": ["n"]}}], "ground_truth_func": ["math_factorial(n=12)"], "model_generated_func": ["math_factorial(n = 12)"]}
{"question": "As a historian, you are researching the political alliances in ancient Rome and you come across a problem that requires you to find the greatest common divisor of the number of senators in two different periods, 450 and 300. Can you use the 'math_gcd' function to solve this problem?", "function": [{"name": "math_gcd", "description": "Calculates the greatest common divisor of two numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first number."}, "b": {"type": "integer", "description": "The second number."}}, "required": ["a", "b"]}}], "ground_truth_func": ["math_gcd(a=450, b=300)"], "model_generated_func": ["math_gcd(a = 450, b = 300)"]}
{"question": "As an architect, you are designing a grid-based city layout and you need to find the greatest common divisor of the number of blocks in the length and width of the city, which are 360 and 240 respectively. Can you use the 'math_gcd' function to determine this?", "function": [{"name": "math_gcd", "description": "Calculates the greatest common divisor of two numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first number."}, "b": {"type": "integer", "description": "The second number."}}, "required": ["a", "b"]}}], "ground_truth_func": ["math_gcd(a=360, b=240)"], "model_generated_func": ["math_gcd(a = 360, b = 240)"]}
{"question": "As a music producer, you are trying to create a rhythm pattern that repeats every certain number of beats. You have two different drum patterns, one repeats every 18 beats and the other every 24 beats. You want to find out after how many beats both patterns will align again. Can you use the 'math_lcm' function with 'a' as 18 and 'b' as 24 to determine this?", "function": [{"name": "math_lcm", "description": "Calculates the least common multiple of two numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first number."}, "b": {"type": "integer", "description": "The second number."}}, "required": ["a", "b"]}}], "ground_truth_func": ["math_lcm(a=18, b=24)"], "model_generated_func": ["math_lcm(a = 18, b = 24)"]}
{"question": "As a city planner, you are designing a traffic light system at a busy intersection. One light changes every 35 seconds and the other every 45 seconds. You need to calculate when both lights will change at the same time to ensure smooth traffic flow. Can you use the 'math_lcm' function with 'a' as 35 and 'b' as 45 to find out this information?", "function": [{"name": "math_lcm", "description": "Calculates the least common multiple of two numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first number."}, "b": {"type": "integer", "description": "The second number."}}, "required": ["a", "b"]}}], "ground_truth_func": ["math_lcm(a=35, b=45)"], "model_generated_func": ["math_lcm(a = 35, b = 45)"]}
{"question": "As a financial advisor, you are helping a client understand their potential mortgage payments. The client is considering a loan amount of $350,000 with an interest rate of 3.5% over a loan period of 30 years. Can you use the 'mortgage_calculator' function with 'loan_amount' as 350000, 'interest_rate' as 3.5, and 'loan_period' as 30 to calculate the monthly mortgage payment?", "function": [{"name": "mortgage_calculator", "description": "Calculates the monthly mortgage payment.", "parameters": {"type": "object", "properties": {"loan_amount": {"type": "integer", "description": "The amount of the loan."}, "interest_rate": {"type": "integer", "description": "The interest rate of the loan."}, "loan_period": {"type": "integer", "description": "The period of the loan."}}, "required": ["loan_amount", "interest_rate", "loan_period"]}}], "ground_truth_func": ["mortgage_calculator(loan_amount=350000, interest_rate=0.035, loan_period=30)"], "model_generated_func": ["mortgage_calculator(loan_amount = 350000, interest_rate = 3.5, loan_period = 30)"]}
{"question": "As a real estate agent, you are assisting a couple in understanding their potential monthly mortgage payments. They are looking at a property valued at $500,000 and are considering a loan with an interest rate of 4.5% for a period of 25 years. Can you use the 'mortgage_calculator' function with 'loan_amount' as 500000, 'interest_rate' as 4.5, and 'loan_period' as 25 to determine what their monthly mortgage payment would be?", "function": [{"name": "mortgage_calculator", "description": "Calculates the monthly mortgage payment.", "parameters": {"type": "object", "properties": {"loan_amount": {"type": "integer", "description": "The amount of the loan."}, "interest_rate": {"type": "integer", "description": "The interest rate of the loan."}, "loan_period": {"type": "integer", "description": "The period of the loan."}}, "required": ["loan_amount", "interest_rate", "loan_period"]}}], "ground_truth_func": ["mortgage_calculator(loan_amount=500000, interest_rate=0.045, loan_period=25)"], "model_generated_func": ["mortgage_calculator(loan_amount = 500000, interest_rate = 4.5, loan_period = 25)"]}
{"question": "As a high school math teacher, you are preparing a lesson on quadratic equations. You want to demonstrate how to calculate the roots of a quadratic equation using the 'quadratic_roots' function. The equation you want to use for your demonstration is 3x^2 + 7x - 10 = 0. Can you use the 'quadratic_roots' function with 'a' as 3, 'b' as 7, and 'c' as -10 to find the roots of this equation?", "function": [{"name": "quadratic_roots", "description": "Calculates the roots of a quadratic equation.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first coefficient."}, "b": {"type": "integer", "description": "The second coefficient."}, "c": {"type": "integer", "description": "The third coefficient."}}, "required": ["a", "b", "c"]}}], "ground_truth_func": ["quadratic_roots(a=3, b=7, c=-10)"], "model_generated_func": ["quadratic_roots(a = 3, b = 7, c = -10)"]}
{"question": "As a software engineer, you are developing a program that solves quadratic equations. You are currently testing the 'quadratic_roots' function and want to use it to find the roots of the equation 5x^2 - 8x + 2 = 0. Can you invoke the 'quadratic_roots' function with 'a' set to 5, 'b' set to -8, and 'c' set to 2 to determine the roots of this equation?", "function": [{"name": "quadratic_roots", "description": "Calculates the roots of a quadratic equation.", "parameters": {"type": "object", "properties": {"a": {"type": "integer", "description": "The first coefficient."}, "b": {"type": "integer", "description": "The second coefficient."}, "c": {"type": "integer", "description": "The third coefficient."}}, "required": ["a", "b", "c"]}}], "ground_truth_func": ["quadratic_roots(a=5, b=-8, c=2)"], "model_generated_func": ["quadratic_roots(a = 5, b = -8, c = 2)"]}
{"question": "As a data analyst, you are working on a project that requires you to analyze demographic data based on zip codes. You are currently using the 'retrieve_city_based_on_zipcode' function to find the city corresponding to a specific zip code. Can you invoke the 'retrieve_city_based_on_zipcode' function with 'zipcode' set to '90210' to determine the city of this zip code?", "function": [{"name": "retrieve_city_based_on_zipcode", "description": "Finds the city of a zipcode.", "parameters": {"type": "object", "properties": {"zipcode": {"type": "string", "description": "The zipcode of the product."}}, "required": ["zipcode"]}}], "ground_truth_func": ["retrieve_city_based_on_zipcode(zipcode='90210')"], "model_generated_func": ["retrieve_city_based_on_zipcode(zipcode = '90210')"]}
{"question": "As a geographical researcher, you are studying the distribution of population across different cities. You have a list of zip codes and you are using the 'retrieve_city_based_on_zipcode' function to find the corresponding city. Could you use the 'retrieve_city_based_on_zipcode' function with the 'zipcode' parameter set to '10001' to identify the city associated with this zip code?", "function": [{"name": "retrieve_city_based_on_zipcode", "description": "Finds the city of a zipcode.", "parameters": {"type": "object", "properties": {"zipcode": {"type": "string", "description": "The zipcode of the product."}}, "required": ["zipcode"]}}], "ground_truth_func": ["retrieve_city_based_on_zipcode(zipcode='10001')"], "model_generated_func": ["retrieve_city_based_on_zipcode(zipcode = '10001')"]}
{"question": "As a cultural anthropologist, you are studying the celebration of holidays in different countries during various years. You have a list of years and countries and you are using the 'retrieve_holiday_by_year' function to find the corresponding holidays. Could you use the 'retrieve_holiday_by_year' function with the 'year' parameter set to '2010' and the 'country' parameter set to 'FR' to identify the holidays celebrated in France in 2010?", "function": [{"name": "retrieve_holiday_by_year", "description": "Finds the holidays of a year.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year of the holidays."}, "country": {"type": "string", "description": "The country of the holidays. Possible options: US, AT, DE, ES, FR, GB, IT, NL, PL, RO, SK, UA."}}, "required": ["year", "country"]}}], "ground_truth_func": ["retrieve_holiday_by_year(year='2010', country='FR')"], "model_generated_func": ["retrieve_holiday_by_year(year = '2010', country = 'FR')"]}
{"question": "As a historian, you are researching the cultural practices of different European countries in the year 2005. You are particularly interested in the holidays celebrated in these countries during this year. You have access to the 'retrieve_holiday_by_year' function. Can you use this function with the 'year' parameter as '2005' and the 'country' parameter as 'DE' to find out the holidays celebrated in Germany in 2005?", "function": [{"name": "retrieve_holiday_by_year", "description": "Finds the holidays of a year.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year of the holidays."}, "country": {"type": "string", "description": "The country of the holidays. Possible options: US, AT, DE, ES, FR, GB, IT, NL, PL, RO, SK, UA."}}, "required": ["year", "country"]}}], "ground_truth_func": ["retrieve_holiday_by_year(year='2005', country='DE')"], "model_generated_func": ["retrieve_holiday_by_year(year = '2005', country = 'DE')"]}
{"question": "As a data analyst, you are working on a project that requires you to organize a set of numerical data. You have access to the 'sort_array' function. Can you use this function with the 'array' parameter as '[34, 2, 56, 7, 9, 12]' and the 'reverse' parameter as 'True' to sort these numbers in descending order?", "function": [{"name": "sort_array", "description": "Sorts an array of numbers.", "parameters": {"type": "object", "properties": {"array": {"type": "array", "items": {"type": "number"}, "description": "The array of numbers."}, "reverse": {"type": "boolean", "description": "Whether to sort the array in reverse order.", "default": false}}, "required": ["array"]}}], "ground_truth_func": ["sort_array(array=[34, 2, 56, 7, 9, 12], reverse=True)"], "model_generated_func": ["sort_array(array = [34, 2, 56, 7, 9, 12], reverse = True)"]}
{"question": "As a data analyst, you are working on a project that requires you to organize a set of numerical data. You have access to the 'sort_array' function. Can you use this function with the 'array' parameter as '[1, 2, 2, 7, 7, 10]'  sort these numbers in ascending order?", "function": [{"name": "sort_array", "description": "Sorts an array of numbers.", "parameters": {"type": "object", "properties": {"array": {"type": "array", "items": {"type": "number"}, "description": "The array of numbers."}, "reverse": {"type": "boolean", "description": "Whether to sort the array in reverse order.", "default": false}}, "required": ["array"]}}], "ground_truth_func": ["sort_array(array=[1, 2, 2, 7, 7, 10], reverse=False)"], "model_generated_func": ["sort_array(array = [1, 2, 2, 7, 7, 10])"]}
{"question": "Add '0011' and '1100'.", "function": [{"name": "add_binary_numbers", "description": "Adds two binary numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "string", "description": "The first binary number."}, "b": {"type": "string", "description": "The second binary number."}}, "required": ["a", "b"]}}], "ground_truth_func": ["add_binary_numbers(a='0011',b='1100')"], "model_generated_func": ["add_binary_numbers(a = '0011', b = '1100')"]}
{"question": "Can you add two binary number '10011' and '1100'.", "function": [{"name": "add_binary_numbers", "description": "Adds two binary numbers.", "parameters": {"type": "object", "properties": {"a": {"type": "string", "description": "The first binary number."}, "b": {"type": "string", "description": "The second binary number."}}, "required": ["a", "b"]}}], "ground_truth_func": ["add_binary_numbers(a='10011',b='1100')"], "model_generated_func": ["add_binary_numbers(a = '10011', b = '1100')"]}
{"question": "Can you use x=[1,2,3],y=[4,5,6] as datapoint to use linear regression to find the value at point=10", "function": [{"name": "linear_regression", "description": "Finds the linear regression of a set of points and evaluates it at a given point.", "parameters": {"type": "object", "properties": {"x": {"type": "array", "description": "The x coordinates of the points.", "items": {"type": "number"}}, "y": {"type": "array", "description": "The y coordinates of the points.", "items": {"type": "number"}}, "point": {"type": "number", "description": "The point to calculate the linear regression at."}}, "required": ["x", "y", "point"]}}], "ground_truth_func": ["linear_regression(x=[1,2,3],y=[4,5,6],point=10)"], "model_generated_func": ["linear_regression(x = [1, 2, 3], y = [4, 5, 6], point = 10)"]}
{"question": "Can you use x=[1,2,-3],y=[4,-5,6] as datapoint to fit a linear regression model and predict the value at 10.", "function": [{"name": "linear_regression", "description": "Finds the linear regression of a set of points and evaluates it at a given point.", "parameters": {"type": "object", "properties": {"x": {"type": "array", "description": "The x coordinates of the points.", "items": {"type": "number"}}, "y": {"type": "array", "description": "The y coordinates of the points.", "items": {"type": "number"}}, "point": {"type": "number", "description": "The point to calculate the linear regression at."}}, "required": ["x", "y", "point"]}}], "ground_truth_func": ["linear_regression(x=[1,2,-3],y=[4,-5,6],point=10)"], "model_generated_func": ["linear_regression(x = [1, 2, -3], y = [4, -5, 6], point = 10)"]}
{"question": "Can you find the maximum number of point that are in the same line out of all [[1,1],[2,2],[3,4],[5,5]].", "function": [{"name": "maxPoints", "description": "Finds the maximum number of points on a line.", "parameters": {"type": "object", "properties": {"points": {"type": "array", "items": {"type": "array", "items": {"type": "integer"}, "minItems": 2, "maxItems": 2, "description": "A point represented by a 2 element list [x, y]."}, "description": "The list of points. Points are 2 element lists."}}, "required": ["points"]}}], "ground_truth_func": ["maxPoints(points=[[1,1],[2,2],[3,4],[5,5]])"], "model_generated_func": ["maxPoints(points = [[1, 1], [2, 2], [3, 4], [5, 5]])"]}
{"question": "Can you find the maximum number of point that are in the same line out of all [[1,1],[2,3],[4,6],[5,5]].", "function": [{"name": "maxPoints", "description": "Finds the maximum number of points on a line.", "parameters": {"type": "object", "properties": {"points": {"type": "array", "items": {"type": "array", "items": {"type": "integer"}, "minItems": 2, "maxItems": 2, "description": "A point represented by a 2 element list [x, y]."}, "description": "The list of points. Points are 2 element lists."}}, "required": ["points"]}}], "ground_truth_func": ["maxPoints(points=[[1,1],[2,3],[4,6],[5,5]])"], "model_generated_func": ["maxPoints(points = [[1, 1], [2, 3], [4, 6], [5, 5]])"]}
{"question": "Calculate the investment value of 10000 initial investment and 1000 annual contribution for 5 years. With an interest rate of 5% and inflation rate of [1%,2%,3%,4%,4%].", "function": [{"name": "calculate_investment_value", "description": "Calculates the value of an investment over time.", "parameters": {"type": "object", "properties": {"initial_investment": {"type": "integer", "description": "The initial investment amount."}, "annual_contribution": {"type": "integer", "description": "The annual contribution amount."}, "years": {"type": "integer", "description": "The number of years to calculate the investment value for."}, "annual_return": {"type": "number", "description": "The annual return rate in percentage."}, "inflation_rate": {"type": "array", "items": {"type": "number"}, "description": "The inflation rate for each year in percentage."}, "adjust_for_inflation": {"type": "boolean", "default": true, "description": "Whether to adjust the investment value for inflation."}}, "required": ["initial_investment", "annual_contribution", "years", "annual_return", "inflation_rate"]}}], "ground_truth_func": ["calculate_investment_value(initial_investment=10000,annual_contribution=1000,years=5,annual_return=0.05,inflation_rate=[0.01,0.02,0.03,0.04,0.04])"], "model_generated_func": ["calculate_investment_value(initial_investment = 10000, annual_contribution = 1000, years = 5, annual_return = 5, inflation_rate = [1, 2, 3, 4, 4])"]}
{"question": "Calculate the investment value of 1 million initial investment and 1k annual contribution for 3 years. With an interest rate of 10% and inflation rate of [1%,4%,4%].", "function": [{"name": "calculate_investment_value", "description": "Calculates the value of an investment over time.", "parameters": {"type": "object", "properties": {"initial_investment": {"type": "integer", "description": "The initial investment amount."}, "annual_contribution": {"type": "integer", "description": "The annual contribution amount."}, "years": {"type": "integer", "description": "The number of years to calculate the investment value for."}, "annual_return": {"type": "number", "description": "The annual return rate in percentage."}, "inflation_rate": {"type": "array", "items": {"type": "number"}, "description": "The inflation rate for each year in percentage."}, "adjust_for_inflation": {"type": "boolean", "default": true, "description": "Whether to adjust the investment value for inflation."}}, "required": ["initial_investment", "annual_contribution", "years", "annual_return", "inflation_rate"]}}], "ground_truth_func": ["calculate_investment_value(initial_investment=1000000,annual_contribution=1000,years=3,annual_return=0.05,inflation_rate=[0.01,0.04,0.04])"], "model_generated_func": ["calculate_investment_value(initial_investment = 1000000, annual_contribution = 1000, years = 3, annual_return = 10, inflation_rate = [1, 4, 4])"]}
{"question": "What is the nutrition need for a male 30 years old 170cm of weight 100kg? He has a activity level of 1 and goal of reducing weight.", "function": [{"name": "calculate_nutritional_needs", "description": "Calculates the nutritional needs of a person based on their weight, height, age, gender, activity level, and goal.", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "The weight of the person in kilograms."}, "height": {"type": "number", "description": "The height of the person in centimeters."}, "age": {"type": "number", "description": "The age of the person in years."}, "gender": {"type": "string", "description": "The gender of the person. Possible options [male, female, other]."}, "activity_level": {"type": "number", "description": "The activity level of the person. Possible options [1,2,3,4,5]."}, "goal": {"type": "string", "description": "The goal of the person. Possible options [lose, gain, maintain]."}}, "required": ["weight", "height", "age", "gender", "activity_level", "goal"]}}], "ground_truth_func": ["calculate_nutritional_needs(weight=100,height=170,age=30,gender='male',activity_level=1,goal='loss')"], "model_generated_func": ["calculate_nutritional_needs(weight = 100, height = 170, age = 30, gender = 'male', activity_level = 1, goal = 'lose')"]}
{"question": "What is the nutrition need for a female 80 years old 170cm of weight 59kg? He has a activity level of 4 and goal of reducing weight.", "function": [{"name": "calculate_nutritional_needs", "description": "Calculates the nutritional needs of a person based on their weight, height, age, gender, activity level, and goal.", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "The weight of the person in kilograms."}, "height": {"type": "number", "description": "The height of the person in centimeters."}, "age": {"type": "number", "description": "The age of the person in years."}, "gender": {"type": "string", "description": "The gender of the person. Possible options [male, female, other]."}, "activity_level": {"type": "number", "description": "The activity level of the person. Possible options [1,2,3,4,5]."}, "goal": {"type": "string", "description": "The goal of the person. Possible options [lose, gain, maintain]."}}, "required": ["weight", "height", "age", "gender", "activity_level", "goal"]}}], "ground_truth_func": ["calculate_nutritional_needs(weight=59,height=170,age=80,gender='female',activity_level=4,goal='loss')"], "model_generated_func": ["calculate_nutritional_needs(weight = 59, height = 170, age = 80, gender = 'female', activity_level = 4, goal = 'lose')"]}
{"question": "Book a deluxe room of 1000 dollar from Aug.11,2024, to Aug.15,2024, with customer id 123.", "function": [{"name": "book_room", "description": "Books a room for a customer.", "parameters": {"type": "object", "properties": {"room_type": {"type": "object", "description": "The room type to book."}, "check_in_date": {"type": "string", "description": "The check-in date in format of MM-DD-YYYY. "}, "check_out_date": {"type": "string", "description": "The check-out date in format of MM-DD-YYYY."}, "customer_id": {"type": "string", "description": "The customer ID."}, "discount_code": {"type": "string", "description": "The discount code (if any).", "default": null}}, "required": ["room_type", "check_in_date", "check_out_date", "customer_id"]}}], "ground_truth_func": ["book_room(room_type={'type':'deluxe','price':1000},check_in_date='08-11-2024',check_out_date='08-15-2024',customer_id='123')"], "model_generated_func": ["book_room(check_in_date = '08-11-2024', check_out_date = '08-15-2024', customer_id = '123')"]}
{"question": "Book a king room of 10000 dollar from Dec.11,2023, to Aug.15,2024, with customer id 123.", "function": [{"name": "book_room", "description": "Books a room for a customer.", "parameters": {"type": "object", "properties": {"room_type": {"type": "object", "description": "The room type to book."}, "check_in_date": {"type": "string", "description": "The check-in date in format of MM-DD-YYYY. "}, "check_out_date": {"type": "string", "description": "The check-out date in format of MM-DD-YYYY."}, "customer_id": {"type": "string", "description": "The customer ID."}, "discount_code": {"type": "string", "description": "The discount code (if any).", "default": null}}, "required": ["room_type", "check_in_date", "check_out_date", "customer_id"]}}], "ground_truth_func": ["book_room(room_type={'type':'king','price':10000},check_in_date='12-11-2023',check_out_date='08-15-2024',customer_id='123')"], "model_generated_func": ["book_room(check_in_date = '12-11-2023', check_out_date = '08-15-2024', customer_id = '123')"]}
{"question": "Order me 10 burgers of 5 dollars, 7 ice creams of 2 dolloars", "function": [{"name": "order_food", "description": "Orders food for a customer.Return the total price.", "parameters": {"type": "object", "properties": {"item": {"type": "object", "items": {"type": "string", "description": "the name of the product."}}}, "quantity": {"type": "object", "items": {"type": "object", "items": {"type": "number", "description": "the number of the product purchased."}}, "price": {"type": "object", "items": {"type": "object", "items": {"type": "number", "description": "the number of the product purchased."}}}}, "required": ["item", "quantity", "price"]}}], "ground_truth_func": ["order_food(item=['burger','ice cream'], quantity=[10,7], price=[5,2])"], "model_generated_func": ["order_food(burgers = {'quantity': 10, 'price': 5}, ice_creams = {'quantity': 7, 'price': 2})"]}
{"question": "Order me 101 dumplings of 0.1 dollars, 20 rice bowl of 10 dolloars", "function": [{"name": "order_food", "description": "Orders food for a customer.Return the total price.", "parameters": {"type": "object", "properties": {"item": {"type": "object", "items": {"type": "string", "description": "the name of the product."}}}, "quantity": {"type": "object", "items": {"type": "object", "items": {"type": "number", "description": "the number of the product purchased."}}, "price": {"type": "object", "items": {"type": "object", "items": {"type": "number", "description": "the number of the product purchased."}}}}, "required": ["item", "quantity", "price"]}}], "ground_truth_func": ["order_food(item=['dumplings','rice bowl'], quantity=[101,20], price=[0.1,10])"], "model_generated_func": ["order_food(items = [{'name': 'dumplings', 'quantity': 101, 'price': 0.1}, {'name': 'rice bowl', 'quantity': 20, 'price': 10}])"]}
{"question": "What's the director of Avatar.", "function": [{"name": "get_movie_director", "description": "Fetches the director of a movie from the OMDB API.", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}], "ground_truth_func": ["get_movie_director(movie_name='Avatar')"], "model_generated_func": ["get_movie_director(movie_name = 'Avatar')"]}
{"question": "What's the director of Pulp Fiction.", "function": [{"name": "get_movie_director", "description": "Fetches the director of a movie from the OMDB API.", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}], "ground_truth_func": ["get_movie_director(movie_name='Pulp Fiction')"], "model_generated_func": ["get_movie_director(movie_name = 'Pulp Fiction')"]}
{"question": "What's the age limit rating of Avatar.", "function": [{"name": "get_movie_rating", "description": "Fetches the age rating of a movie from the OMDB API.", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}], "ground_truth_func": ["get_movie_rating(movie_name='Avatar')"], "model_generated_func": ["get_movie_rating(movie_name = 'Avatar')"]}
{"question": "What's the age limit rating of Pulp Fiction.", "function": [{"name": "get_movie_rating", "description": "Fetches the age rating of a movie from the OMDB API.", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}], "ground_truth_func": ["get_movie_rating(movie_name='Pulp Fiction')"], "model_generated_func": ["get_movie_rating(movie_name = 'Pulp Fiction')"]}
{"question": "What is the are of polygon formed by vertices [[1,2],[3,4],[1,3]]", "function": [{"name": "polygon_area", "description": "Calculate the area of a polygon given its vertices using the shoelace formula.", "parameters": {"type": "object", "properties": {"vertices": {"type": "array", "items": {"type": "array", "items": {"type": "number"}, "minItems": 2, "maxItems": 2, "description": "A single vertex represented by a 2 element list [x, y]."}, "description": "The vertices of the polygon, where each vertex is a 2 element list [x, y]."}}, "required": ["vertices"]}}], "ground_truth_func": ["polygon_area(vertices=[[1,2],[3,4],[1,3]])"], "model_generated_func": ["polygon_area(vertices = [[1, 2], [3, 4], [1, 3]])"]}
{"question": "What is the are of polygon formed by vertices [[1,2],[3,4],[1,4],[3,7]]", "function": [{"name": "polygon_area", "description": "Calculate the area of a polygon given its vertices using the shoelace formula.", "parameters": {"type": "object", "properties": {"vertices": {"type": "array", "items": {"type": "array", "items": {"type": "number"}, "minItems": 2, "maxItems": 2, "description": "A single vertex represented by a 2 element list [x, y]."}, "description": "The vertices of the polygon, where each vertex is a 2 element list [x, y]."}}, "required": ["vertices"]}}], "ground_truth_func": ["polygon_area(vertices=[[1,2],[3,4],[1,4],[3,7]])"], "model_generated_func": ["polygon_area(vertices = [[1, 2], [3, 4], [1, 4], [3, 7]])"]}
